2021-12-23 21:57:39 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 24400 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 21:57:39 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 21:57:41 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
2021-12-23 21:57:41 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 21:57:41 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 61 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 75 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$1ceb74a4.producerFactory(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.kafkaTemplate(KafkaProducerConfig.java:53)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$1ceb74a4.CGLIB$kafkaTemplate$1(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$1ceb74a4$$FastClassBySpringCGLIB$$a1e7b6e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$1ceb74a4.kafkaTemplate(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 76 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 99 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1084)
	at java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:196)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:163)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.producerFactory(KafkaProducerConfig.java:48)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$1ceb74a4.CGLIB$producerFactory$0(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$1ceb74a4$$FastClassBySpringCGLIB$$a1e7b6e8.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$1ceb74a4.producerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 100 common frames omitted
2021-12-23 22:05:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 14604 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:05:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:05:32 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
2021-12-23 22:05:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:05:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 61 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 75 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.producerFactory(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.kafkaTemplate(KafkaProducerConfig.java:53)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.CGLIB$kafkaTemplate$2(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af$$FastClassBySpringCGLIB$$228e40c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.kafkaTemplate(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 76 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 99 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1084)
	at java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:196)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:163)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.producerFactory(KafkaProducerConfig.java:48)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.CGLIB$producerFactory$1(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af$$FastClassBySpringCGLIB$$228e40c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.producerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 100 common frames omitted
2021-12-23 22:07:02 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 15148 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:07:02 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:07:05 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
2021-12-23 22:07:05 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:07:05 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 61 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 75 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.producerFactory(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.kafkaTemplate(KafkaProducerConfig.java:53)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.CGLIB$kafkaTemplate$0(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af$$FastClassBySpringCGLIB$$228e40c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.kafkaTemplate(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 76 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 99 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1084)
	at java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:196)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:163)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.producerFactory(KafkaProducerConfig.java:48)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.CGLIB$producerFactory$1(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af$$FastClassBySpringCGLIB$$228e40c4.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$81de84af.producerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 100 common frames omitted
2021-12-23 22:12:25 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 2336 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:12:25 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:12:27 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
2021-12-23 22:12:27 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:12:28 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 61 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 75 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$38efe9b1.producerFactory(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.kafkaTemplate(KafkaProducerConfig.java:53)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$38efe9b1.CGLIB$kafkaTemplate$0(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$38efe9b1$$FastClassBySpringCGLIB$$8f4b76b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$38efe9b1.kafkaTemplate(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 76 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 99 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1084)
	at java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:196)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:163)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.producerFactory(KafkaProducerConfig.java:48)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$38efe9b1.CGLIB$producerFactory$1(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$38efe9b1$$FastClassBySpringCGLIB$$8f4b76b2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$38efe9b1.producerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 100 common frames omitted
2021-12-23 22:16:29 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 21948 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:16:29 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:16:31 [main] WARN  o.s.b.w.r.c.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
2021-12-23 22:16:31 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:16:31 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterToKafkaServiceApplication': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:64)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStreamRunner' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\runner\impl\TwitterKafkaStreamRunner.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaStatusListener' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes\com\microservices\demo\twitter\to\kafka\service\listener\TwitterKafkaStatusListener.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 33 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'twitterKafkaProducer' defined in file [C:\Workspaces\EventDrivenMicroservices\microservices-demo\kafka\kafka-producer\target\classes\com\microservices\demo\kafka\producer\config\service\impl\TwitterKafkaProducer.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'kafkaTemplate' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 61 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'kafkaTemplate' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 75 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'producerFactory' defined in class path resource [com/microservices/demo/kafka/producer/config/KafkaProducerConfig.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:486)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$66a307d0.producerFactory(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.kafkaTemplate(KafkaProducerConfig.java:53)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$66a307d0.CGLIB$kafkaTemplate$0(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$66a307d0$$FastClassBySpringCGLIB$$536856ae.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$66a307d0.kafkaTemplate(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 76 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'producerFactory' threw exception; nested exception is java.lang.NullPointerException
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 99 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1084)
	at java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:196)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:163)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig.producerFactory(KafkaProducerConfig.java:48)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$66a307d0.CGLIB$producerFactory$1(<generated>)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$66a307d0$$FastClassBySpringCGLIB$$536856ae.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at com.microservices.demo.kafka.producer.config.KafkaProducerConfig$$EnhancerBySpringCGLIB$$66a307d0.producerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 100 common frames omitted
2021-12-23 22:18:53 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 10560 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:18:53 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:18:55 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:18:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:18:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:18:55 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640278135782
2021-12-23 22:18:57 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:18:57 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.444 seconds (JVM running for 6.829)
2021-12-23 22:18:57 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:18:57 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:18:58 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 1 
2021-12-23 22:19:00 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 2 
2021-12-23 22:19:00 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:19:00 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: Reached max number of retry for creating kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.createTopics(KafkaAdminClient.java:49)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:23)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 22:19:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:19:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:19:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:19:00 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:19:00 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:21:25 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 15772 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:21:25 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:21:32 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:21:33 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:21:33 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:21:33 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640278293314
2021-12-23 22:21:35 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:21:35 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 10.276 seconds (JVM running for 11.998)
2021-12-23 22:21:35 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:24:45 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:24:47 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 1 
2021-12-23 22:24:49 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 2 
2021-12-23 22:24:49 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:24:49 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: Reached max number of retry for creating kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.createTopics(KafkaAdminClient.java:49)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:23)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 22:24:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:24:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:24:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:24:49 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:24:49 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:25:00 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 6224 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:25:00 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:25:03 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:25:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:25:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:25:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640278503473
2021-12-23 22:25:05 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:25:05 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.457 seconds (JVM running for 6.375)
2021-12-23 22:25:05 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:25:05 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:25:05 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:25:05 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:25:07 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:25:11 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:25:19 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:25:19 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:25:19 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:113)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkTopicsCreated(KafkaAdminClient.java:62)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.createTopics(KafkaAdminClient.java:51)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:23)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 22:25:19 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:25:19 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:25:19 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:25:19 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:25:19 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:31:16 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 14136 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:31:16 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:31:18 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:31:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:31:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:31:18 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640278878684
2021-12-23 22:31:20 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:31:20 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.246 seconds (JVM running for 6.242)
2021-12-23 22:31:20 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:31:20 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:31:20 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:31:20 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:31:22 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:31:26 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:31:34 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:31:34 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:31:34 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:113)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkTopicsCreated(KafkaAdminClient.java:62)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.createTopics(KafkaAdminClient.java:51)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:23)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 22:31:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:31:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:31:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:31:34 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:31:34 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:35:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 12016 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:35:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:35:33 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:35:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:35:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:35:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279134483
2021-12-23 22:35:37 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:35:37 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 8.036 seconds (JVM running for 9.302)
2021-12-23 22:35:37 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:36:16 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:38:22 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:38:31 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:40:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:40:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:40:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:40:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:40:12 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:40:14 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:40:22 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 24108 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:40:22 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:40:25 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:40:25 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:40:25 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:40:25 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279425958
2021-12-23 22:40:28 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:40:28 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 7.347 seconds (JVM running for 8.949)
2021-12-23 22:40:28 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:40:31 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:40:31 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:40:31 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:40:31 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:40:31 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:40:31 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:40:31 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:40:31 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:40:33 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:41:03 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 1360 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:41:03 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:41:06 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:41:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:41:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:41:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279466731
2021-12-23 22:41:08 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:41:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.477 seconds (JVM running for 6.506)
2021-12-23 22:41:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:41:08 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:41:08 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:41:08 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:41:11 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics ready for transformation
2021-12-23 22:41:11 [main] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Started filtering twitter stream for keywords [Java, Microservices, Kafka, Elasticsearch]
2021-12-23 22:41:11 [Twitter Stream consumer /  [1][initializing]] INFO  twitter4j.TwitterStreamImpl - Establishing connection.
2021-12-23 22:41:15 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Connection established.
2021-12-23 22:41:15 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Receiving status stream.
2021-12-23 22:41:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @franzanth: CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE…
2021-12-23 22:41:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1425235271663108099, "id": 1474065056673456142, "text": "RT @franzanth: CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE\u2026", "createdAt": 1640279470000}' to topic='twitter-topic'
2021-12-23 22:41:15 [Twitter4J Async Dispatcher[0]] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	internal.auto.downgrade.txn.commit = true
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2021-12-23 22:41:15 [Twitter4J Async Dispatcher[0]] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.remove.java.properties = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.2
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	use.latest.version = false
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2021-12-23 22:41:15 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:41:15 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:41:15 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279475380
2021-12-23 22:41:15 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: _Rv3ZlYsRlyII9UMY750ug
2021-12-23 22:41:17 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @GustavoCols: A security flaw has been unearthed in #Microsoft's #Azure App Service that resulted in the exposure of source code of cust…
2021-12-23 22:41:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1423655520196435969, "id": 1474065063996755975, "text": "RT @GustavoCols: A security flaw has been unearthed in #Microsoft's #Azure App Service that resulted in the exposure of source code of cust\u2026", "createdAt": 1640279472000}' to topic='twitter-topic'
2021-12-23 22:41:19 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: NODE.JS BACKEND / FULL STACK DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100D…
2021-12-23 22:41:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447909184343773184, "id": 1474065065452134408, "text": "RT @WajdiKayal3: NODE.JS BACKEND / FULL STACK DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100D\u2026", "createdAt": 1640279473000}' to topic='twitter-topic'
2021-12-23 22:41:21 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:41:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1378830363150196738, "id": 1474065074339954692, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279475000}' to topic='twitter-topic'
2021-12-23 22:41:23 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:23 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Java版マイクラ買いました！
2021-12-23 22:41:23 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1097425620819046400, "id": 1474065080522526720, "text": "Java版マイクラ買いました！", "createdAt": 1640279476000}' to topic='twitter-topic'
2021-12-23 22:41:25 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text We've all been there! Focus is key
2021-12-23 22:41:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1463247227971846153, "id": 1474065087199649796, "text": "We've all been there! Focus is key", "createdAt": 1640279478000}' to topic='twitter-topic'
2021-12-23 22:41:27 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @sivriikalemler Franz Kafka 'Dava'
2021-12-23 22:41:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1420776912348123137, "id": 1474065112193511429, "text": "@sivriikalemler Franz Kafka 'Dava'", "createdAt": 1640279484000}' to topic='twitter-topic'
2021-12-23 22:41:30 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal1: Marketing Operations Manager 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode…
2021-12-23 22:41:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447909184343773184, "id": 1474065124596097026, "text": "RT @WajdiKayal1: Marketing Operations Manager \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode\u2026", "createdAt": 1640279487000}' to topic='twitter-topic'
2021-12-23 22:41:33 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @wajdi_kayal: DJANGO / PYTHON DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#P…
2021-12-23 22:41:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447909184343773184, "id": 1474065165872209934, "text": "RT @wajdi_kayal: DJANGO / PYTHON DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#P\u2026", "createdAt": 1640279497000}' to topic='twitter-topic'
2021-12-23 22:41:43 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:43 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text #Java guys, did you forget to replace Random with RandomGenerator in Collections.shuffle(List<?>, Random)? (https://t.co/Awtgy90t53)
2021-12-23 22:41:43 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 370063521, "id": 1474065168502034441, "text": "#Java guys, did you forget to replace Random with RandomGenerator in Collections.shuffle(List<?>, Random)? (https://t.co/Awtgy90t53)", "createdAt": 1640279497000}' to topic='twitter-topic'
2021-12-23 22:41:45 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Wajdialkayal1: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pyt…
2021-12-23 22:41:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447909184343773184, "id": 1474065180741062656, "text": "RT @Wajdialkayal1: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pyt\u2026", "createdAt": 1640279500000}' to topic='twitter-topic'
2021-12-23 22:41:47 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @FedorSally: Buy Verified Ebay Account

https://t.co/Ki03sy699d
#BigData #Analytics #DataScience #IoT #IIoT #PyTorch #Python #RStats #Te…
2021-12-23 22:41:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1276058041389953024, "id": 1474065183563784200, "text": "RT @FedorSally: Buy Verified Ebay Account\n\nhttps://t.co/Ki03sy699d\n#BigData #Analytics #DataScience #IoT #IIoT #PyTorch #Python #RStats #Te\u2026", "createdAt": 1640279501000}' to topic='twitter-topic'
2021-12-23 22:41:49 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:49 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Yok abi söylüyorum ve söylemeye devam edicem geçte olsa..
2021-12-23 22:41:49 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1213060610956464128, "id": 1474065187372244995, "text": "Yok abi söylüyorum ve söylemeye devam edicem geçte olsa..", "createdAt": 1640279502000}' to topic='twitter-topic'
2021-12-23 22:41:51 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:51 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @mb_ir Always had the illusion that universities were a home for academics. Instead they have developed in disrespectful and even abusive entities that milk academics with the “brand” being all that matters.  Rather than exemplary, they can be pure Kafka.
2021-12-23 22:41:51 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 49143429, "id": 1474065190291484677, "text": "@mb_ir Always had the illusion that universities were a home for academics. Instead they have developed in disrespectful and even abusive entities that milk academics with the \u201Cbrand\u201D being all that matters.  Rather than exemplary, they can be pure Kafka.", "createdAt": 1640279502000}' to topic='twitter-topic'
2021-12-23 22:41:53 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:53 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @EricMedvetTs: #Java guys, did you forget to replace Random with RandomGenerator in Collections.shuffle(List<?>, Random)? (https://t.co/…
2021-12-23 22:41:53 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1423655520196435969, "id": 1474065191717548037, "text": "RT @EricMedvetTs: #Java guys, did you forget to replace Random with RandomGenerator in Collections.shuffle(List<?>, Random)? (https://t.co/\u2026", "createdAt": 1640279503000}' to topic='twitter-topic'
2021-12-23 22:41:55 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Python 
#Wordpress
#flutter 
#nodejs
#javascript
#Angular
#developer
#php
#Swift 
#VueJS 
#Kotlin
#Java
#HTML
#react
#Magento 
https://t.co/JE7tr7jHqn
2021-12-23 22:41:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447909184343773184, "id": 1474065220410748928, "text": "MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Python \n#Wordpress\n#flutter \n#nodejs\n#javascript\n#Angular\n#developer\n#php\n#Swift \n#VueJS \n#Kotlin\n#Java\n#HTML\n#react\n#Magento \nhttps://t.co/JE7tr7jHqn", "createdAt": 1640279510000}' to topic='twitter-topic'
2021-12-23 22:41:57 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @vtremolet: Le passe vaccinal doit remplacer les tests par le vaccin. Mais il pourrait être accompagné, dans certains lieux, d'une oblig…
2021-12-23 22:41:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 47359496, "id": 1474065221262221316, "text": "RT @vtremolet: Le passe vaccinal doit remplacer les tests par le vaccin. Mais il pourrait être accompagné, dans certains lieux, d'une oblig\u2026", "createdAt": 1640279510000}' to topic='twitter-topic'
2021-12-23 22:41:59 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:41:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @cloudpreacher: What is Hyperautomation?

https://t.co/VtEEFLuNF4

#BigData #Analytics #DataScience #AI #MachineLearning #IoT #IIoT #PyT…
2021-12-23 22:41:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 72369754, "id": 1474065224248569861, "text": "RT @cloudpreacher: What is Hyperautomation?\n\nhttps://t.co/VtEEFLuNF4\n\n#BigData #Analytics #DataScience #AI #MachineLearning #IoT #IIoT #PyT\u2026", "createdAt": 1640279510000}' to topic='twitter-topic'
2021-12-23 22:42:01 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programming and creating websites or mobile apps which requires creativity as well (such as drawing).

#programming #Coding #designing #development #uiuxdesign #Java
2021-12-23 22:42:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 826961510, "id": 1474065229021532191, "text": "When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programming and creating websites or mobile apps which requires creativity as well (such as drawing).\n\n#programming #Coding #designing #development #uiuxdesign #Java", "createdAt": 1640279512000}' to topic='twitter-topic'
2021-12-23 22:42:04 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447909184343773184, "id": 1474065235904507906, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279513000}' to topic='twitter-topic'
2021-12-23 22:42:06 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 40591485, "id": 1474065242422394881, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279515000}' to topic='twitter-topic'
2021-12-23 22:42:08 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1448297335126204421, "id": 1474065249078763527, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279516000}' to topic='twitter-topic'
2021-12-23 22:42:10 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 411419084, "id": 1474065251012268058, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279517000}' to topic='twitter-topic'
2021-12-23 22:42:12 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1437728609909706753, "id": 1474065251079376896, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279517000}' to topic='twitter-topic'
2021-12-23 22:42:14 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @i_am_manish09: When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programm…
2021-12-23 22:42:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1386109685741260803, "id": 1474065258423672837, "text": "RT @i_am_manish09: When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programm\u2026", "createdAt": 1640279519000}' to topic='twitter-topic'
2021-12-23 22:42:16 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @i_am_manish09: When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programm…
2021-12-23 22:42:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 411419084, "id": 1474065258775924744, "text": "RT @i_am_manish09: When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programm\u2026", "createdAt": 1640279519000}' to topic='twitter-topic'
2021-12-23 22:42:18 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:42:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1243365656898174976, "id": 1474065263096172546, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279520000}' to topic='twitter-topic'
2021-12-23 22:42:20 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text mezdeke'nin "led bir vele diştiri, vela di seu diftiri, dil esvuayyini murra, murra
dil esvuayyeni murraaaaa" dediği yerdeyim.
2021-12-23 22:42:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1412466595197337605, "id": 1474065265063309313, "text": "mezdeke'nin \"led bir vele diştiri, vela di seu diftiri, dil esvuayyini murra, murra\ndil esvuayyeni murraaaaa\" dediği yerdeyim.", "createdAt": 1640279520000}' to topic='twitter-topic'
2021-12-23 22:42:22 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Python 
#Wordpress
#flutter 
#nodejs
#javascript
#Angular
#developer
#php
#Swift 
#VueJS 
#Kotlin
#Java
#HTML
#react
#Magento 
https://t.co/XPZ60eKtua
2021-12-23 22:42:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447904814336204812, "id": 1474065265637920771, "text": "MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Python \n#Wordpress\n#flutter \n#nodejs\n#javascript\n#Angular\n#developer\n#php\n#Swift \n#VueJS \n#Kotlin\n#Java\n#HTML\n#react\n#Magento \nhttps://t.co/XPZ60eKtua", "createdAt": 1640279520000}' to topic='twitter-topic'
2021-12-23 22:42:24 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Java &  Angular Developer Required
Budget (1500-12500) INR
Name: HybridDeveloper
Country: India
Client : https://t.co/Kpz4NXrw99
Project Link: https://t.co/q6b0uky4to
https://t.co/EwQetDRmhP #HATINC #Freelance #freelancer #business #freelancers
2021-12-23 22:42:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1011565812, "id": 1474065269156839424, "text": "Java &  Angular Developer Required\nBudget (1500-12500) INR\nName: HybridDeveloper\nCountry: India\nClient : https://t.co/Kpz4NXrw99\nProject Link: https://t.co/q6b0uky4to\nhttps://t.co/EwQetDRmhP #HATINC #Freelance #freelancer #business #freelancers", "createdAt": 1640279521000}' to topic='twitter-topic'
2021-12-23 22:42:26 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ❗ランキング：7位❗(CPU)

「CPUクーラー 大型デュアルファン A500 Tower Air Cooler CT-9010003-WW」
メーカ:Corsair

価格:¥9,175✨
🔥売り切れ間近🔥(02:12)

https://t.co/D3TCMbfO6s
2021-12-23 22:42:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1375961552122044417, "id": 1474065270641930247, "text": "❗ランキング：7位❗(CPU)\n\n「CPUクーラー 大型デュアルファン A500 Tower Air Cooler CT-9010003-WW」\nメーカ:Corsair\n\n価格:¥9,175✨\n🔥売り切れ間近🔥(02:12)\n\nhttps://t.co/D3TCMbfO6s", "createdAt": 1640279521000}' to topic='twitter-topic'
2021-12-23 22:42:28 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:42:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1460730028703072257, "id": 1474065272676003847, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279522000}' to topic='twitter-topic'
2021-12-23 22:42:30 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text عندي عناوين وأفكار وتصاميم لألعاب جديدة غير مسبوقة
ولكن ليس لي من يجسدها أو يطورها
أنا وحدي لا أستطيع أن أكون كاتب ومصمم ورسام ومخرج ومطور و...
لكن سأحاول إن شاء الله بما أستطيع عسى أن ييسر الله لي وأجد من يدعم أفكاري
#games #gamedevelopment  #java #development #javafx
2021-12-23 22:42:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1002246934864781313, "id": 1474065277881131012, "text": "عندي عناوين وأفكار وتصاميم لألعاب جديدة غير مسبوقة\nولكن ليس لي من يجسدها أو يطورها\nأنا وحدي لا أستطيع أن أكون كاتب ومصمم ورسام ومخرج ومطور و...\nلكن سأحاول إن شاء الله بما أستطيع عسى أن ييسر الله لي وأجد من يدعم أفكاري\n#games #gamedevelopment  #java #development #javafx", "createdAt": 1640279523000}' to topic='twitter-topic'
2021-12-23 22:42:32 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:32 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:32 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1364130692075028483, "id": 1474065284873003027, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279525000}' to topic='twitter-topic'
2021-12-23 22:42:34 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal1: Marketing Operations Manager 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode…
2021-12-23 22:42:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1260015280048222208, "id": 1474065293261611011, "text": "RT @WajdiKayal1: Marketing Operations Manager \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode\u2026", "createdAt": 1640279527000}' to topic='twitter-topic'
2021-12-23 22:42:36 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1437728609909706753, "id": 1474065296138784792, "text": "RT @WajdiKayal3: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279528000}' to topic='twitter-topic'
2021-12-23 22:42:38 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 411419084, "id": 1474065296122015744, "text": "RT @WajdiKayal3: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279528000}' to topic='twitter-topic'
2021-12-23 22:42:41 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:41 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1458379165355413504, "id": 1474065300631035907, "text": "RT @WajdiKayal3: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279529000}' to topic='twitter-topic'
2021-12-23 22:42:43 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:43 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:43 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1064108650271309826, "id": 1474065302086463493, "text": "RT @WajdiKayal3: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279529000}' to topic='twitter-topic'
2021-12-23 22:42:45 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1458379165355413504, "id": 1474065303726395395, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279529000}' to topic='twitter-topic'
2021-12-23 22:42:47 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1364497572509880322, "id": 1474065305131491331, "text": "RT @WajdiKayal3: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279530000}' to topic='twitter-topic'
2021-12-23 22:42:49 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:49 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @GuidesJava: Java Guides: Spring Data JPA Query Method - IN Clause https://t.co/NWWhJshDw0
2021-12-23 22:42:49 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1391627756882960386, "id": 1474065317101932545, "text": "RT @GuidesJava: Java Guides: Spring Data JPA Query Method - IN Clause https://t.co/NWWhJshDw0", "createdAt": 1640279533000}' to topic='twitter-topic'
2021-12-23 22:42:51 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:51 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:51 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1330350611796209666, "id": 1474065317999611904, "text": "RT @WajdiKayal3: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279533000}' to topic='twitter-topic'
2021-12-23 22:42:53 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:53 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @i_am_manish09: When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programm…
2021-12-23 22:42:53 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1423655520196435969, "id": 1474065319312384020, "text": "RT @i_am_manish09: When I say creating, I mean Programming a piece of software, not designing it. There is an entire world outside Programm\u2026", "createdAt": 1640279533000}' to topic='twitter-topic'
2021-12-23 22:42:55 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:42:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1127829883013361665, "id": 1474065331463331853, "text": "RT @WajdiKayal3: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279536000}' to topic='twitter-topic'
2021-12-23 22:42:57 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @kaushikcbasu: Late December minimalism, with Kafka. https://t.co/7HvAVB0ozS
2021-12-23 22:42:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1363148775527653376, "id": 1474065381677420544, "text": "RT @kaushikcbasu: Late December minimalism, with Kafka. https://t.co/7HvAVB0ozS", "createdAt": 1640279548000}' to topic='twitter-topic'
2021-12-23 22:42:59 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:42:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text i think part of the new chapter I liked in the new chapter is narumi calling kafka number 8 and not monster how he used to do it before. little progress but he puts more trust in kafka now
2021-12-23 22:42:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1442489758622490633, "id": 1474065387117592578, "text": "i think part of the new chapter I liked in the new chapter is narumi calling kafka number 8 and not monster how he used to do it before. little progress but he puts more trust in kafka now", "createdAt": 1640279549000}' to topic='twitter-topic'
2021-12-23 22:43:01 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text 最初に中国政府が知ってれば攻撃し放題だもんね。うちの会社でも中国製のJava APIから攻撃のログあったよ。IPが他の国でも、中国語ドキュメントしか存在しないAPIで攻撃してきたらばればれやろ。
2021-12-23 22:43:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 757394491699449861, "id": 1474065446861406208, "text": "最初に中国政府が知ってれば攻撃し放題だもんね。うちの会社でも中国製のJava APIから攻撃のログあったよ。IPが他の国でも、中国語ドキュメントしか存在しないAPIで攻撃してきたらばればれやろ。", "createdAt": 1640279564000}' to topic='twitter-topic'
2021-12-23 22:43:03 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:43:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1253085390686294022, "id": 1474065459469332481, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279567000}' to topic='twitter-topic'
2021-12-23 22:43:05 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text #marketplace #MarketingStrategy #MarketingAutomation #BigData #Analytics #AI #MachineLearning #IoT #IIoT #Python #RStats #TensorFlow #Java #JavaScript #ReactJS #GoLang #CloudComputing #Serverless #DataScientist #Linux #Programming #Coding #100DaysofCode https://t.co/wQwTl5IWDP
2021-12-23 22:43:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1335278877661409284, "id": 1474065490477830149, "text": "#marketplace #MarketingStrategy #MarketingAutomation #BigData #Analytics #AI #MachineLearning #IoT #IIoT #Python #RStats #TensorFlow #Java #JavaScript #ReactJS #GoLang #CloudComputing #Serverless #DataScientist #Linux #Programming #Coding #100DaysofCode https://t.co/wQwTl5IWDP", "createdAt": 1640279574000}' to topic='twitter-topic'
2021-12-23 22:43:07 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @intigriti: Wanna see three brand new OAuth attacks and how our very own @securinti hacked Shopify with a single dot?

It's all in this…
2021-12-23 22:43:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1432695953941749767, "id": 1474065498598146051, "text": "RT @intigriti: Wanna see three brand new OAuth attacks and how our very own @securinti hacked Shopify with a single dot?\n\nIt's all in this\u2026", "createdAt": 1640279576000}' to topic='twitter-topic'
2021-12-23 22:43:09 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Jakeli12704641: #marketplace #MarketingStrategy #MarketingAutomation #BigData #Analytics #AI #MachineLearning #IoT #IIoT #Python #RStat…
2021-12-23 22:43:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1448297335126204421, "id": 1474065501131268101, "text": "RT @Jakeli12704641: #marketplace #MarketingStrategy #MarketingAutomation #BigData #Analytics #AI #MachineLearning #IoT #IIoT #Python #RStat\u2026", "createdAt": 1640279576000}' to topic='twitter-topic'
2021-12-23 22:43:11 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Jakeli12704641: #marketplace #MarketingStrategy #MarketingAutomation #BigData #Analytics #AI #MachineLearning #IoT #IIoT #Python #RStat…
2021-12-23 22:43:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1386109685741260803, "id": 1474065509238857732, "text": "RT @Jakeli12704641: #marketplace #MarketingStrategy #MarketingAutomation #BigData #Analytics #AI #MachineLearning #IoT #IIoT #Python #RStat\u2026", "createdAt": 1640279578000}' to topic='twitter-topic'
2021-12-23 22:43:13 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:43:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1142615097174646784, "id": 1474065536736800768, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279585000}' to topic='twitter-topic'
2021-12-23 22:43:15 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @psikoIojiu: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 22:43:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1471499891243290627, "id": 1474065546442334234, "text": "RT @psikoIojiu: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640279587000}' to topic='twitter-topic'
2021-12-23 22:43:18 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Doxyaxone: The best way to learn is by doing. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #…
2021-12-23 22:43:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1283965825590984704, "id": 1474065546664718340, "text": "RT @Doxyaxone: The best way to learn is by doing. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #\u2026", "createdAt": 1640279587000}' to topic='twitter-topic'
2021-12-23 22:43:20 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @DivineOmega Don't waste your time... Switch to java ASAP
2021-12-23 22:43:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3541047132, "id": 1474065559310327808, "text": "@DivineOmega Don't waste your time... Switch to java ASAP", "createdAt": 1640279590000}' to topic='twitter-topic'
2021-12-23 22:43:22 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @SuhaniPanda6: Day 2 of #100DaysOfCode 

How long does it normally take to learn a coding language and be proficient in it?

#Python #cp…
2021-12-23 22:43:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1403020350871400451, "id": 1474065563580342288, "text": "RT @SuhaniPanda6: Day 2 of #100DaysOfCode \n\nHow long does it normally take to learn a coding language and be proficient in it?\n\n#Python #cp\u2026", "createdAt": 1640279591000}' to topic='twitter-topic'
2021-12-23 22:43:24 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @shadowbIood Everyone hates on java till you realize all  large scale corporate software is built on java 8 or something.

I still hate java but it's inescapable.
2021-12-23 22:43:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 828726973954453505, "id": 1474065586581872642, "text": "@shadowbIood Everyone hates on java till you realize all  large scale corporate software is built on java 8 or something.\n\nI still hate java but it's inescapable.", "createdAt": 1640279597000}' to topic='twitter-topic'
2021-12-23 22:43:26 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @1ZRR4H: 🚨 New Alert 🍯

Ongoing distributed scanning targeting #VMware instances vulnerable to #Log4Shell (2nd round)

${jndi:ldap://149…
2021-12-23 22:43:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 620341271, "id": 1474065595435929621, "text": "RT @1ZRR4H: 🚨 New Alert 🍯\n\nOngoing distributed scanning targeting #VMware instances vulnerable to #Log4Shell (2nd round)\n\n${jndi:ldap://149\u2026", "createdAt": 1640279599000}' to topic='twitter-topic'
2021-12-23 22:43:28 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text In my learning-new-things-everyday challenge I completed Create a Supermarket app using Java OOP! #day1 Check out my certificate 

https://t.co/QXzJlfYBeb
2021-12-23 22:43:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1470070454681411598, "id": 1474065605326098451, "text": "In my learning-new-things-everyday challenge I completed Create a Supermarket app using Java OOP! #day1 Check out my certificate \n\nhttps://t.co/QXzJlfYBeb", "createdAt": 1640279601000}' to topic='twitter-topic'
2021-12-23 22:43:30 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:37 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Tecnovagas1: 📣 Nova Oportunidade!

🧑‍💻 Pleno em #java e #springboot
🏙️ Arctica
🪙 R$ 4.180
📍 Remoto

Candidate-se agora! https://t.co/pJ…
2021-12-23 22:43:37 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 549012259, "id": 1474065652453363717, "text": "RT @Tecnovagas1: 📣 Nova Oportunidade!\n\n🧑\u200D💻 Pleno em #java e #springboot\n🏙️ Arctica\n🪙 R$ 4.180\n📍 Remoto\n\nCandidate-se agora! https://t.co/pJ\u2026", "createdAt": 1640279613000}' to topic='twitter-topic'
2021-12-23 22:43:39 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @denovosoftsol: #denovojobs
Vacancy for-Java-J2EE-Architect
Location-Bengaluru
Experience->10 YEARS
External ID-1799828

Send resume – c…
2021-12-23 22:43:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 22324727, "id": 1474065664654524417, "text": "RT @denovosoftsol: #denovojobs\nVacancy for-Java-J2EE-Architect\nLocation-Bengaluru\nExperience->10 YEARS\nExternal ID-1799828\n\nSend resume \u2013 c\u2026", "createdAt": 1640279615000}' to topic='twitter-topic'
2021-12-23 22:43:42 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text De #booster gekregen en nu met #Kafka Brief aan vader, mijn kwartier wachten. Kafka durfde de brief niet zelf aan hem te sturen. Hij vroeg zijn moeder de brief door te geven, zij weigerde dit. Ach ja. https://t.co/XF16vLfF9U
2021-12-23 22:43:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1022044872138809346, "id": 1474065665296420872, "text": "De #booster gekregen en nu met #Kafka Brief aan vader, mijn kwartier wachten. Kafka durfde de brief niet zelf aan hem te sturen. Hij vroeg zijn moeder de brief door te geven, zij weigerde dit. Ach ja. https://t.co/XF16vLfF9U", "createdAt": 1640279616000}' to topic='twitter-topic'
2021-12-23 22:43:44 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text From Frank Bruni: A bakery and coffee shop in Eugene, Ore., called Crumb Together. 

A sandwich shop in Pismo Beach, Calif., called House of the Rising Buns. 

A few coffee shops, including one in Anchorage, allude to a “Star Wars” series character with the name Java the Hut.
2021-12-23 22:43:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 17479637, "id": 1474065670124056584, "text": "From Frank Bruni: A bakery and coffee shop in Eugene, Ore., called Crumb Together. \n\nA sandwich shop in Pismo Beach, Calif., called House of the Rising Buns. \n\nA few coffee shops, including one in Anchorage, allude to a \u201CStar Wars\u201D series character with the name Java the Hut.", "createdAt": 1640279617000}' to topic='twitter-topic'
2021-12-23 22:43:46 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @GuidesJava: Java Guides: Spring Data JPA Query Method - Between https://t.co/qe1HHlXQf1
2021-12-23 22:43:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1391627756882960386, "id": 1474065716747767809, "text": "RT @GuidesJava: Java Guides: Spring Data JPA Query Method - Between https://t.co/qe1HHlXQf1", "createdAt": 1640279628000}' to topic='twitter-topic'
2021-12-23 22:43:54 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:43:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text AWS Is Out To Kill Mainframes: "The cloud vendor wants to replace big iron with hyperscale servers, and COBOL – with Java" https://t.co/8RHWjGf8xJ
2021-12-23 22:43:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1145499678, "id": 1474065742542909441, "text": "AWS Is Out To Kill Mainframes: \"The cloud vendor wants to replace big iron with hyperscale servers, and COBOL \u2013 with Java\" https://t.co/8RHWjGf8xJ", "createdAt": 1640279634000}' to topic='twitter-topic'
2021-12-23 22:44:01 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:44:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 883947075091795968, "id": 1474065761199136772, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279638000}' to topic='twitter-topic'
2021-12-23 22:44:05 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @kitapsozuu Kafka'nin kurduğu en iyimser cümle bu olsa gerek 🤨
2021-12-23 22:44:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1438957500859092994, "id": 1474065763992494086, "text": "@kitapsozuu Kafka'nin kurduğu en iyimser cümle bu olsa gerek 🤨", "createdAt": 1640279639000}' to topic='twitter-topic'
2021-12-23 22:44:07 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @franzanth: CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE…
2021-12-23 22:44:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 360209164, "id": 1474065764005007379, "text": "RT @franzanth: CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE CRAB CAVE\u2026", "createdAt": 1640279639000}' to topic='twitter-topic'
2021-12-23 22:44:09 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDK45VP
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 22:44:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 964373115441635328, "id": 1474065774994153481, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDK45VP\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640279642000}' to topic='twitter-topic'
2021-12-23 22:44:11 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @psikoIojiu: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 22:44:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2338251790, "id": 1474065777640759299, "text": "RT @psikoIojiu: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640279642000}' to topic='twitter-topic'
2021-12-23 22:44:13 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Okurken kahkaha atıyorum. Aynı şey kafka'nın dava'sında da olmuştu. https://t.co/Ttr8IKREvm
2021-12-23 22:44:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4886063098, "id": 1474065793805602822, "text": "Okurken kahkaha atıyorum. Aynı şey kafka'nın dava'sında da olmuştu. https://t.co/Ttr8IKREvm", "createdAt": 1640279646000}' to topic='twitter-topic'
2021-12-23 22:44:15 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Franz Kafka şöyle diyor: 
Zerre kadar anlamadıkları şeyler hakkında konuşuyorlar. Sırf aptallıkları sayesinde kendilerinden bu kadar eminler."
2021-12-23 22:44:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1453972549893693443, "id": 1474065841956212752, "text": "Franz Kafka şöyle diyor: \nZerre kadar anlamadıkları şeyler hakkında konuşuyorlar. Sırf aptallıkları sayesinde kendilerinden bu kadar eminler.\"", "createdAt": 1640279658000}' to topic='twitter-topic'
2021-12-23 22:44:24 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:44:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:44:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:44:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:44:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:44:28 [SpringApplicationShutdownHook] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Closing twitter stream
2021-12-23 22:44:33 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:44:33 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2021-12-23 22:44:33 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:44:33 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:44:33 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:44:33 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2021-12-23 22:45:03 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 19940 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:45:03 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:45:06 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:45:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:45:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:45:06 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279706970
2021-12-23 22:45:08 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:45:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.741 seconds (JVM running for 6.786)
2021-12-23 22:45:08 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:45:08 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:45:08 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:45:08 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:45:09 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -1 (localhost/127.0.0.1:19092) could not be established. Broker may not be available.
2021-12-23 22:45:12 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics ready for transformation
2021-12-23 22:45:12 [main] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Started filtering twitter stream for keywords [Java, Microservices, Kafka, Elasticsearch]
2021-12-23 22:45:12 [Twitter Stream consumer /  [1][initializing]] INFO  twitter4j.TwitterStreamImpl - Establishing connection.
2021-12-23 22:45:16 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Connection established.
2021-12-23 22:45:16 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Receiving status stream.
2021-12-23 22:45:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @asirihaklii: “Söyleyecek çok şey vardı ama söylememeye karar verdim.”

Franz Kafka
2021-12-23 22:45:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1200718746073149440, "id": 1474066070856245261, "text": "RT @asirihaklii: \u201CSöyleyecek çok şey vardı ama söylememeye karar verdim.\u201D\n\nFranz Kafka", "createdAt": 1640279712000}' to topic='twitter-topic'
2021-12-23 22:45:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	internal.auto.downgrade.txn.commit = true
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2021-12-23 22:45:17 [Twitter4J Async Dispatcher[0]] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.remove.java.properties = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.2
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	use.latest.version = false
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2021-12-23 22:45:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:45:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:45:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279717206
2021-12-23 22:45:17 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: _Rv3ZlYsRlyII9UMY750ug
2021-12-23 22:45:19 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:45:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text I just earned the Back End Development and APIs certification @freeCodeCamp! Check it out here: https://t.co/2cuCtMLtr8 
Thank you @freeCodeCamp and @ossia for creating such nice platform for learning. #happycoding #freeCodeCamp #microservices
2021-12-23 22:45:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1383985868, "id": 1474066078925869056, "text": "I just earned the Back End Development and APIs certification @freeCodeCamp! Check it out here: https://t.co/2cuCtMLtr8 \nThank you @freeCodeCamp and @ossia for creating such nice platform for learning. #happycoding #freeCodeCamp #microservices", "createdAt": 1640279714000}' to topic='twitter-topic'
2021-12-23 22:45:21 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:45:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:45:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 189495297, "id": 1474066101533302793, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279720000}' to topic='twitter-topic'
2021-12-23 22:45:26 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:45:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @SappySealsNFT: Day 10 of Pixl Pets🎮

Like+RT to win a FREE Pixl Pet❤️🔁

It is here! The Sappy Seals Minecraft Survival Multiplayer (Cro…
2021-12-23 22:45:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 912276791271743488, "id": 1474066109154226176, "text": "RT @SappySealsNFT: Day 10 of Pixl Pets🎮\n\nLike+RT to win a FREE Pixl Pet❤️🔁\n\nIt is here! The Sappy Seals Minecraft Survival Multiplayer (Cro\u2026", "createdAt": 1640279721000}' to topic='twitter-topic'
2021-12-23 22:45:28 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:45:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @luceos Hi Daniel,

We prefer make our users lose 30 seconds than lose their data.
But you are right, with Elasticsearch the service name is very long and in that case it is "too much".

We will see to improve that. Thanks for this feedback!
2021-12-23 22:45:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 984332715993501697, "id": 1474066111033401350, "text": "@luceos Hi Daniel,\n\nWe prefer make our users lose 30 seconds than lose their data.\nBut you are right, with Elasticsearch the service name is very long and in that case it is \"too much\".\n\nWe will see to improve that. Thanks for this feedback!", "createdAt": 1640279722000}' to topic='twitter-topic'
2021-12-23 22:45:30 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:45:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:45:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:45:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:45:41 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:45:41 [SpringApplicationShutdownHook] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Closing twitter stream
2021-12-23 22:45:42 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:45:42 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2021-12-23 22:45:42 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:45:42 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:45:42 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:45:42 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2021-12-23 22:45:56 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 6160 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:45:56 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:45:58 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:45:58 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:45:58 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:45:58 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279758719
2021-12-23 22:46:00 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:46:00 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.315 seconds (JVM running for 6.371)
2021-12-23 22:46:00 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:46:00 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:46:00 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:46:00 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:46:03 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics ready for transformation
2021-12-23 22:46:03 [main] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Started filtering twitter stream for keywords [Java, Microservices, Kafka, Elasticsearch]
2021-12-23 22:46:03 [Twitter Stream consumer /  [1][initializing]] INFO  twitter4j.TwitterStreamImpl - Establishing connection.
2021-12-23 22:46:08 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Connection established.
2021-12-23 22:46:08 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Receiving status stream.
2021-12-23 22:46:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kashish72122933: Day 63 of #100DaysOfCode 
1. JavaScript: Question to find the maximum element in the array using the reduce() method a…
2021-12-23 22:46:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 991473278245130240, "id": 1474066286007234563, "text": "RT @Kashish72122933: Day 63 of #100DaysOfCode \n1. JavaScript: Question to find the maximum element in the array using the reduce() method a\u2026", "createdAt": 1640279764000}' to topic='twitter-topic'
2021-12-23 22:46:08 [Twitter4J Async Dispatcher[0]] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	internal.auto.downgrade.txn.commit = true
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2021-12-23 22:46:08 [Twitter4J Async Dispatcher[0]] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.remove.java.properties = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.2
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	use.latest.version = false
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2021-12-23 22:46:08 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:46:08 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:46:08 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640279768957
2021-12-23 22:46:08 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: _Rv3ZlYsRlyII9UMY750ug
2021-12-23 22:46:11 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @javacrucianism: May the Blessings of the Most Caffeinated Lord #JAVA find all of the "over-Caffeinated Twitter lefties" and grant them…
2021-12-23 22:46:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1423655520196435969, "id": 1474066338599608329, "text": "RT @javacrucianism: May the Blessings of the Most Caffeinated Lord #JAVA find all of the \"over-Caffeinated Twitter lefties\" and grant them\u2026", "createdAt": 1640279776000}' to topic='twitter-topic'
2021-12-23 22:46:22 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:46:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1471464908046974978, "id": 1474066369385832455, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279783000}' to topic='twitter-topic'
2021-12-23 22:46:30 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:32 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Kaiju No.8 Chapter 53 had Kafka and Gen going all out!!! YouTube review in link below #KaijuNo8 
https://t.co/LAVTOs8rZi https://t.co/cqXErkDbpD
2021-12-23 22:46:32 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1139174869407584257, "id": 1474066383981973506, "text": "Kaiju No.8 Chapter 53 had Kafka and Gen going all out!!! YouTube review in link below #KaijuNo8 \nhttps://t.co/LAVTOs8rZi https://t.co/cqXErkDbpD", "createdAt": 1640279787000}' to topic='twitter-topic'
2021-12-23 22:46:34 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:46:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 769629395262771200, "id": 1474066395214368777, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279790000}' to topic='twitter-topic'
2021-12-23 22:46:36 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:46:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 978091613036560385, "id": 1474066399035375627, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279791000}' to topic='twitter-topic'
2021-12-23 22:46:38 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 22:46:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1446028129059938307, "id": 1474066402931888139, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640279791000}' to topic='twitter-topic'
2021-12-23 22:46:40 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDK45VP
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 22:46:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1311904892076781568, "id": 1474066406043897875, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDK45VP\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640279792000}' to topic='twitter-topic'
2021-12-23 22:46:42 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @uyaredebiyat: “sanki bir hafta boyunca gece gündüz bir taşa çivi çakmakla görevlendirilmiş gibiyim. ama işçi de benim milena, çivi de.”…
2021-12-23 22:46:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4164372754, "id": 1474066419625209861, "text": "RT @uyaredebiyat: \u201Csanki bir hafta boyunca gece gündüz bir taşa çivi çakmakla görevlendirilmiş gibiyim. ama işçi de benim milena, çivi de.\u201D\u2026", "createdAt": 1640279795000}' to topic='twitter-topic'
2021-12-23 22:46:44 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @itsoknottobegay: Unanimous @KIIARA #FactCheck #100DaysOfCode i am the only straight guy who loves you 
#trendingkiiara #fintech #insurt…
2021-12-23 22:46:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1346615924535787520, "id": 1474066490429222917, "text": "RT @itsoknottobegay: Unanimous @KIIARA #FactCheck #100DaysOfCode i am the only straight guy who loves you \n#trendingkiiara #fintech #insurt\u2026", "createdAt": 1640279812000}' to topic='twitter-topic'
2021-12-23 22:46:59 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:46:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @psikoIojiu: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 22:46:59 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1472493686579773440, "id": 1474066501569331201, "text": "RT @psikoIojiu: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640279815000}' to topic='twitter-topic'
2021-12-23 22:47:01 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text denedim kafka olmuyor
2021-12-23 22:47:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 236129376, "id": 1474066505453158405, "text": "denedim kafka olmuyor", "createdAt": 1640279816000}' to topic='twitter-topic'
2021-12-23 22:47:03 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @BabosadaN: ¿Quién es el valiente que se atreve a entrar en este permahardcore?
Recuerda que cada día aumenta la dificultad.

#permahard…
2021-12-23 22:47:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1384131812188844034, "id": 1474066507965485078, "text": "RT @BabosadaN: ¿Quién es el valiente que se atreve a entrar en este permahardcore?\nRecuerda que cada día aumenta la dificultad.\n\n#permahard\u2026", "createdAt": 1640279816000}' to topic='twitter-topic'
2021-12-23 22:47:06 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Unit testing help needed  Java Spring boot using Power Mockito 
Budget (8-15) USD
Name: TutorYourNeed
Country: United States
Client : https://t.co/98zUvIzxwt
Project Link: https://t.co/9Q3nOEvSMW
https://t.co/EwQetDzLqh #HATINC #Freelance #freelancer #business #freelancers
2021-12-23 22:47:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1011565812, "id": 1474066526626009095, "text": "Unit testing help needed  Java Spring boot using Power Mockito \nBudget (8-15) USD\nName: TutorYourNeed\nCountry: United States\nClient : https://t.co/98zUvIzxwt\nProject Link: https://t.co/9Q3nOEvSMW\nhttps://t.co/EwQetDzLqh #HATINC #Freelance #freelancer #business #freelancers", "createdAt": 1640279821000}' to topic='twitter-topic'
2021-12-23 22:47:08 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @noblechairs: It's really been hell of a #giveaway month! 🔥

To celebrate the last week of this years #XMAS giveaways,
we'll be giving a…
2021-12-23 22:47:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3793724967, "id": 1474066550219067395, "text": "RT @noblechairs: It's really been hell of a #giveaway month! 🔥\n\nTo celebrate the last week of this years #XMAS giveaways,\nwe'll be giving a\u2026", "createdAt": 1640279827000}' to topic='twitter-topic'
2021-12-23 22:47:13 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @javacrucianism: May the Blessings of the Most Caffeinated Lord #JAVA find all of the "over-Caffeinated Twitter lefties" and grant them…
2021-12-23 22:47:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1298466614002802689, "id": 1474066561400979470, "text": "RT @javacrucianism: May the Blessings of the Most Caffeinated Lord #JAVA find all of the \"over-Caffeinated Twitter lefties\" and grant them\u2026", "createdAt": 1640279829000}' to topic='twitter-topic'
2021-12-23 22:47:16 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @shadowbIood No it's not but all my comp sci friends say shit like "they're teaching us java what a waste" and then boom you realize only startups use Python and other languages like that.
2021-12-23 22:47:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 828726973954453505, "id": 1474066572448829447, "text": "@shadowbIood No it's not but all my comp sci friends say shit like \"they're teaching us java what a waste\" and then boom you realize only startups use Python and other languages like that.", "createdAt": 1640279832000}' to topic='twitter-topic'
2021-12-23 22:47:18 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Picmolia: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 22:47:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1164977384157851648, "id": 1474066578425757698, "text": "RT @Picmolia: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640279833000}' to topic='twitter-topic'
2021-12-23 22:47:20 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @BritHemming: 🧵 What's Everyone learning this holiday break? I'm learning Java, so far it's making me appreciate all the syntax errors y…
2021-12-23 22:47:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1403020350871400451, "id": 1474066592262676480, "text": "RT @BritHemming: 🧵 What's Everyone learning this holiday break? I'm learning Java, so far it's making me appreciate all the syntax errors y\u2026", "createdAt": 1640279837000}' to topic='twitter-topic'
2021-12-23 22:47:23 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @NMegaman757: Kaiju No.8 Chapter 53 had Kafka and Gen going all out!!! YouTube review in link below #KaijuNo8 
https://t.co/LAVTOs8rZi h…
2021-12-23 22:47:26 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3456042132, "id": 1474066614358200338, "text": "RT @NMegaman757: Kaiju No.8 Chapter 53 had Kafka and Gen going all out!!! YouTube review in link below #KaijuNo8 \nhttps://t.co/LAVTOs8rZi h\u2026", "createdAt": 1640279842000}' to topic='twitter-topic'
2021-12-23 22:47:28 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:47:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1427905585417265158, "id": 1474066622457556998, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279844000}' to topic='twitter-topic'
2021-12-23 22:47:31 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 22:47:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1152649665323683841, "id": 1474066651259805700, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640279851000}' to topic='twitter-topic'
2021-12-23 22:47:37 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @PatnaudeJoseph: Buy Verified Stripe Accounts

#Computer #technology #technews #tech #techno #technologynews #ComputerScience #Python3 #…
2021-12-23 22:47:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 884009229501296641, "id": 1474066658994049024, "text": "RT @PatnaudeJoseph: Buy Verified Stripe Accounts\n\n#Computer #technology #technews #tech #techno #technologynews #ComputerScience #Python3 #\u2026", "createdAt": 1640279852000}' to topic='twitter-topic'
2021-12-23 22:47:40 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @InfoBhp: Notepad++ is a handy, very useful source code editor designed to support several #ProgrammingLanguages. Notepad++ is designed…
2021-12-23 22:47:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1314164146934513665, "id": 1474066663763058689, "text": "RT @InfoBhp: Notepad++ is a handy, very useful source code editor designed to support several #ProgrammingLanguages. Notepad++ is designed\u2026", "createdAt": 1640279854000}' to topic='twitter-topic'
2021-12-23 22:47:42 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Check out this listing I just added to my #Poshmark closet: Monster Energy Tall Java Mug. https://t.co/8JDR99VVxo #shopmycloset @poshmarkapp
2021-12-23 22:47:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 29655250, "id": 1474066690023387137, "text": "Check out this listing I just added to my #Poshmark closet: Monster Energy Tall Java Mug. https://t.co/8JDR99VVxo #shopmycloset @poshmarkapp", "createdAt": 1640279860000}' to topic='twitter-topic'
2021-12-23 22:47:47 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:48 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @shadowbIood Also java runs on 3 billion devices
2021-12-23 22:47:48 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 828726973954453505, "id": 1474066704191967236, "text": "@shadowbIood Also java runs on 3 billion devices", "createdAt": 1640279863000}' to topic='twitter-topic'
2021-12-23 22:47:50 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @RebeccaRambar: Indonésie : Dimanche, le volcan Merapi a craché des cendres & du gaz chaud dans 1 colonne de fumée atteignant 6 km dans…
2021-12-23 22:47:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2311700875, "id": 1474066704875536390, "text": "RT @RebeccaRambar: Indonésie : Dimanche, le volcan Merapi a craché des cendres & du gaz chaud dans 1 colonne de fumée atteignant 6 km dans\u2026", "createdAt": 1640279863000}' to topic='twitter-topic'
2021-12-23 22:47:52 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:47:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @PenmanshipP: You’ll Never Be Wealthier Then When Money Didn’t Earn Your Attention, Misconception is Man Made:) Only Thing of Value Was…
2021-12-23 22:47:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1346615924535787520, "id": 1474066731161341954, "text": "RT @PenmanshipP: You\u2019ll Never Be Wealthier Then When Money Didn\u2019t Earn Your Attention, Misconception is Man Made:) Only Thing of Value Was\u2026", "createdAt": 1640279870000}' to topic='twitter-topic'
2021-12-23 22:47:57 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:48:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ❗ランキング：9位❗ (CPU)

「水冷CPUクーラー iCUE H100i RGB PRO XT CW-9060043-WW」
メーカ:Corsair

価格:¥13,482(02:18)

https://t.co/ITqQBEFQbV
2021-12-23 22:48:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1375961552122044417, "id": 1474066789688803328, "text": "❗ランキング：9位❗ (CPU)\n\n「水冷CPUクーラー iCUE H100i RGB PRO XT CW-9060043-WW」\nメーカ:Corsair\n\n価格:¥13,482(02:18)\n\nhttps://t.co/ITqQBEFQbV", "createdAt": 1640279884000}' to topic='twitter-topic'
2021-12-23 22:48:10 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 22:48:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:48:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:48:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:48:13 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:48:13 [SpringApplicationShutdownHook] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Closing twitter stream
2021-12-23 22:48:13 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 22:48:13 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2021-12-23 22:48:13 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:48:13 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:48:13 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:48:13 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2021-12-23 22:57:09 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 18160 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 22:57:09 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 22:57:11 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 22:57:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 22:57:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 22:57:11 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640280431886
2021-12-23 22:57:13 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 22:57:13 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.157 seconds (JVM running for 6.369)
2021-12-23 22:57:13 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 22:57:13 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 22:57:13 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 22:57:13 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 22:57:29 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 22:57:29 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:113)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkSchemaRegistry(KafkaAdminClient.java:79)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:24)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 22:57:29 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 22:57:29 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 22:57:29 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 22:57:29 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 22:57:29 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:04:00 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 9464 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:04:00 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:04:02 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:04:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:04:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:04:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640280842987
2021-12-23 23:04:05 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:04:05 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 6.024 seconds (JVM running for 7.207)
2021-12-23 23:04:05 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:04:05 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:04:05 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:04:05 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:04:05 [kafka-admin-client-thread | adminclient-1] WARN  o.apache.kafka.clients.NetworkClient - [AdminClient clientId=adminclient-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2021-12-23 23:04:07 [reactor-http-nio-3] WARN  r.n.http.client.HttpClientConnect - [0448518f-1, L:0.0.0.0/0.0.0.0:51119 ! R:localhost/127.0.0.1:8081] The connection observed an error
reactor.netty.http.client.PrematureCloseException: Connection prematurely closed BEFORE response
2021-12-23 23:04:07 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics ready for transformation
2021-12-23 23:04:07 [main] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Started filtering twitter stream for keywords [Java, Microservices, Kafka, Elasticsearch]
2021-12-23 23:04:07 [Twitter Stream consumer /  [1][initializing]] INFO  twitter4j.TwitterStreamImpl - Establishing connection.
2021-12-23 23:04:12 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Connection established.
2021-12-23 23:04:12 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Receiving status stream.
2021-12-23 23:04:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text hey @pluralsight your site search isn't working. for example I know you have elasticsearch courses but no results returned: https://t.co/dizgqoBcrt  Wondering if you are aware of the issue and working on a fix?
2021-12-23 23:04:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 312938752, "id": 1474070833328902152, "text": "hey @pluralsight your site search isn't working. for example I know you have elasticsearch courses but no results returned: https://t.co/dizgqoBcrt  Wondering if you are aware of the issue and working on a fix?", "createdAt": 1640280848000}' to topic='twitter-topic'
2021-12-23 23:04:12 [Twitter4J Async Dispatcher[0]] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	internal.auto.downgrade.txn.commit = true
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2021-12-23 23:04:12 [Twitter4J Async Dispatcher[0]] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.remove.java.properties = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.2
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	use.latest.version = false
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2021-12-23 23:04:13 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:04:13 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:04:13 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640280853088
2021-12-23 23:04:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node -3 (localhost/127.0.0.1:39092) could not be established. Broker may not be available.
2021-12-23 23:04:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Bootstrap broker localhost:39092 (id: -3 rack: null) disconnected
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node -2 (localhost/127.0.0.1:29092) could not be established. Broker may not be available.
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Bootstrap broker localhost:29092 (id: -2 rack: null) disconnected
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: 5GRQtbVzS9WqRxuZbYSqKg
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Hostinger: We can confirm that our web hosting servers do not support services that depend on Log4j. Our API and UI systems do not run…
2021-12-23 23:04:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 16361949, "id": 1474070837435125783, "text": "RT @Hostinger: We can confirm that our web hosting servers do not support services that depend on Log4j. Our API and UI systems do not run\u2026", "createdAt": 1640280849000}' to topic='twitter-topic'
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @sertvurgular: Franz Kafka;
"Kirli bir camdan bakıp, her şeyi ve herkesi kirli sanıyorsunuz." https://t.co/1wdewDlUy5
2021-12-23 23:04:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2270336190, "id": 1474070863473483783, "text": "RT @sertvurgular: Franz Kafka;\n\"Kirli bir camdan bakıp, her şeyi ve herkesi kirli sanıyorsunuz.\" https://t.co/1wdewDlUy5", "createdAt": 1640280855000}' to topic='twitter-topic'
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Minecraft: Continue the celebration with the free Howl of the Wild map for Minecraft: Java Edition from @Mitheyx! Solve puzzles, team u…
2021-12-23 23:04:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1312420595888349184, "id": 1474070889062977543, "text": "RT @Minecraft: Continue the celebration with the free Howl of the Wild map for Minecraft: Java Edition from @Mitheyx! Solve puzzles, team u\u2026", "createdAt": 1640280861000}' to topic='twitter-topic'
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @psikoIojiu: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 23:04:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1356963468272926720, "id": 1474070930905260043, "text": "RT @psikoIojiu: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640280871000}' to topic='twitter-topic'
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:04:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @PatnaudeJoseph: Buy Verified Stripe Accounts

#Computer #technology #technews #tech #techno #technologynews #ComputerScience #Python3 #…
2021-12-23 23:04:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1204128767251230720, "id": 1474070968729546755, "text": "RT @PatnaudeJoseph: Buy Verified Stripe Accounts\n\n#Computer #technology #technews #tech #techno #technologynews #ComputerScience #Python3 #\u2026", "createdAt": 1640280880000}' to topic='twitter-topic'
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:04:48 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @iyi_psikoloji: “Uyudum, uyandım, uyudum, uyandım, kepaze bir yaşam.”

| Franz Kafka |
2021-12-23 23:04:48 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 795286204925222913, "id": 1474070971845947392, "text": "RT @iyi_psikoloji: \u201CUyudum, uyandım, uyudum, uyandım, kepaze bir yaşam.\u201D\n\n| Franz Kafka |", "createdAt": 1640280881000}' to topic='twitter-topic'
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:50 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:04:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Robertioria: Yt https://t.co/P1xFFr4TC1  
fb https://t.co/zmCHstSgBx
Web 
https://t.co/HLhxyTqh1y
#java #epsxe #psxshare #PS4live #xbox…
2021-12-23 23:04:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1398866593237508100, "id": 1474070986584690696, "text": "RT @Robertioria: Yt https://t.co/P1xFFr4TC1  \nfb https://t.co/zmCHstSgBx\nWeb \nhttps://t.co/HLhxyTqh1y\n#java #epsxe #psxshare #PS4live #xbox\u2026", "createdAt": 1640280884000}' to topic='twitter-topic'
2021-12-23 23:04:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:04:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @MaleFunctions: Lobotomy’s by #Dexter 
#IDO #ETH #NFT #GameFi #HTML #WordPress #Security #Python #AI #IoT #IIoT #Azure #PyTorch #Cython…
2021-12-23 23:04:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1398866593237508100, "id": 1474070986605662216, "text": "RT @MaleFunctions: Lobotomy\u2019s by #Dexter \n#IDO #ETH #NFT #GameFi #HTML #WordPress #Security #Python #AI #IoT #IIoT #Azure #PyTorch #Cython\u2026", "createdAt": 1640280884000}' to topic='twitter-topic'
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:54 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:04:54 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @SuhaniPanda6: Day 2 of #100DaysOfCode 

How long does it normally take to learn a coding language and be proficient in it?

#Python #cp…
2021-12-23 23:04:54 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1398866593237508100, "id": 1474070986622439430, "text": "RT @SuhaniPanda6: Day 2 of #100DaysOfCode \n\nHow long does it normally take to learn a coding language and be proficient in it?\n\n#Python #cp\u2026", "createdAt": 1640280884000}' to topic='twitter-topic'
2021-12-23 23:04:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:56 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:04:56 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @ChiefHwb: We must!! @CloudocKai  #javascript #java #azure #yaoi #python https://t.co/tcBLCrKnTr https://t.co/DQLEX9X5jb
2021-12-23 23:04:56 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1398866593237508100, "id": 1474070986655944709, "text": "RT @ChiefHwb: We must!! @CloudocKai  #javascript #java #azure #yaoi #python https://t.co/tcBLCrKnTr https://t.co/DQLEX9X5jb", "createdAt": 1640280884000}' to topic='twitter-topic'
2021-12-23 23:04:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:58 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:04:58 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @PatnaudeJoseph: Buy Verified Stripe Accounts

#Computer #technology #technews #tech #techno #technologynews #ComputerScience #Python3 #…
2021-12-23 23:04:58 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1398866593237508100, "id": 1474070986664386560, "text": "RT @PatnaudeJoseph: Buy Verified Stripe Accounts\n\n#Computer #technology #technews #tech #techno #technologynews #ComputerScience #Python3 #\u2026", "createdAt": 1640280884000}' to topic='twitter-topic'
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:04:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @LumumbaOjwang: 101 #MachineLearning Algorithms for #DataScience
#Analytics #AI #PyTorch #Python #RStats #TensorFlow #Java #JavaScript #…
2021-12-23 23:05:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1280935835789975553, "id": 1474071017907789825, "text": "RT @LumumbaOjwang: 101 #MachineLearning Algorithms for #DataScience\n#Analytics #AI #PyTorch #Python #RStats #TensorFlow #Java #JavaScript #\u2026", "createdAt": 1640280892000}' to topic='twitter-topic'
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Web Coding Bible (18 Books in 1 — HTML, CSS, Javascript, PHP, SQL, XML, SVG, Canvas, WebGL, Java Applet, ActionScript, htaccess, jQuery, WordPress, SEO and many more): An Accelerated Course https://t.co/nyfieQhz87
2021-12-23 23:05:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1447488601869078528, "id": 1474071030377422848, "text": "Web Coding Bible (18 Books in 1 \u2014 HTML, CSS, Javascript, PHP, SQL, XML, SVG, Canvas, WebGL, Java Applet, ActionScript, htaccess, jQuery, WordPress, SEO and many more): An Accelerated Course https://t.co/nyfieQhz87", "createdAt": 1640280895000}' to topic='twitter-topic'
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text そして統合とJava、スキン近いものにしたいな。やっぱ。
みんなスキンでどうやって作ってるの？？w
2021-12-23 23:05:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1400301969802104832, "id": 1474071045976248321, "text": "そして統合とJava、スキン近いものにしたいな。やっぱ。\nみんなスキンでどうやって作ってるの？？w", "createdAt": 1640280898000}' to topic='twitter-topic'
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @TheHackersNews: A newly discovered 4-year-old flaw — dubbed NotLegit — in #Microsoft's #Azure app service has exposed hundreds of sourc…
2021-12-23 23:05:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 974511652870565888, "id": 1474071060211511297, "text": "RT @TheHackersNews: A newly discovered 4-year-old flaw \u2014 dubbed NotLegit \u2014 in #Microsoft's #Azure app service has exposed hundreds of sourc\u2026", "createdAt": 1640280902000}' to topic='twitter-topic'
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Don Nikolai ve Franz Kafka (1943, renklendirilmemiş) https://t.co/y5bGalTAWA
2021-12-23 23:05:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 947115828507480065, "id": 1474071063864778757, "text": "Don Nikolai ve Franz Kafka (1943, renklendirilmemiş) https://t.co/y5bGalTAWA", "createdAt": 1640280903000}' to topic='twitter-topic'
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ランキング:7位 (スポーツ)

ナイキ NIKE アカデミー ハイパーウォームサッカー フィールドグローブ 手袋 アクセサリー  (CU15......(02:35)

https://t.co/mxcFuyjGhq
2021-12-23 23:05:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1367656120739762185, "id": 1474071073100804097, "text": "ランキング:7位 (スポーツ)\n\nナイキ NIKE アカデミー ハイパーウォームサッカー フィールドグローブ 手袋 アクセサリー  (CU15......(02:35)\n\nhttps://t.co/mxcFuyjGhq", "createdAt": 1640280905000}' to topic='twitter-topic'
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: “Biraz daha uyusam bütün bu olanlardan kurtulabilir miyim?”

Franz Kafka
2021-12-23 23:05:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1408409872518029313, "id": 1474071084756578305, "text": "RT @Sozyuku: \u201CBiraz daha uyusam bütün bu olanlardan kurtulabilir miyim?\u201D\n\nFranz Kafka", "createdAt": 1640280908000}' to topic='twitter-topic'
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kitaplandik: “Söyleyecek çok şey vardı ama söylememeye karar verdim.”

Franz Kafka
2021-12-23 23:05:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1429387632753135621, "id": 1474071090267934722, "text": "RT @Kitaplandik: \u201CSöyleyecek çok şey vardı ama söylememeye karar verdim.\u201D\n\nFranz Kafka", "createdAt": 1640280909000}' to topic='twitter-topic'
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @koseilteer: Java yazmaktan daha kötü olan bir şey varsa okul zoruyla Java yazmak
2021-12-23 23:05:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1237956939071569922, "id": 1474071097079443468, "text": "RT @koseilteer: Java yazmaktan daha kötü olan bir şey varsa okul zoruyla Java yazmak", "createdAt": 1640280911000}' to topic='twitter-topic'
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @generalshin4 unnie, java chip is okay na for me! choz ingaaat
2021-12-23 23:05:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1201711181129375744, "id": 1474071150057918464, "text": "@generalshin4 unnie, java chip is okay na for me! choz ingaaat", "createdAt": 1640280923000}' to topic='twitter-topic'
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @VootSelect Start where you are. Use what you have. Do what you can... 

@justvoot 
#PratikIsTheBoss 
#PratikSehajpal 
#PratikFam

Java whba
2021-12-23 23:05:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1439195398917136385, "id": 1474071159385706496, "text": "@VootSelect Start where you are. Use what you have. Do what you can... \n\n@justvoot \n#PratikIsTheBoss \n#PratikSehajpal \n#PratikFam\n\nJava whba", "createdAt": 1640280925000}' to topic='twitter-topic'
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: “Biraz daha uyusam bütün bu olanlardan kurtulabilir miyim?”

Franz Kafka
2021-12-23 23:05:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1313582054479716354, "id": 1474071221599932426, "text": "RT @Sozyuku: \u201CBiraz daha uyusam bütün bu olanlardan kurtulabilir miyim?\u201D\n\nFranz Kafka", "createdAt": 1640280940000}' to topic='twitter-topic'
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysO…
2021-12-23 23:05:54 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1269506162388426752, "id": 1474071257247367176, "text": "RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS\n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysO\u2026", "createdAt": 1640280949000}' to topic='twitter-topic'
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysO…
2021-12-23 23:05:58 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1277715645430468608, "id": 1474071279397478404, "text": "RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS\n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysO\u2026", "createdAt": 1640280954000}' to topic='twitter-topic'
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:05:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysO…
2021-12-23 23:06:02 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1448297335126204421, "id": 1474071294669111297, "text": "RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS\n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysO\u2026", "createdAt": 1640280958000}' to topic='twitter-topic'
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ❗ランキング：15位❗(CPU)

「MEG CORELIQUID S280 MEG-CORELIQUID-S280」
メーカ:MSI

価格:¥35,979✨
🔥売り切れ間近🔥(02:36)

https://t.co/qQyFxkjovQ
2021-12-23 23:06:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1375961552122044417, "id": 1474071312520089602, "text": "❗ランキング：15位❗(CPU)\n\n「MEG CORELIQUID S280 MEG-CORELIQUID-S280」\nメーカ:MSI\n\n価格:¥35,979✨\n🔥売り切れ間近🔥(02:36)\n\nhttps://t.co/qQyFxkjovQ", "createdAt": 1640280962000}' to topic='twitter-topic'
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:06:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysO…
2021-12-23 23:06:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1458379165355413504, "id": 1474071316483526673, "text": "RT @WajdiKayal3: SENIOR HTML/CSS DEVELOPER WORDPRESS\n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysO\u2026", "createdAt": 1640280963000}' to topic='twitter-topic'
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:06:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Franz Kafka'nın aşkı Milenya'da anlatışı çok güzel
2021-12-23 23:06:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1399001781577863169, "id": 1474071317058101265, "text": "Franz Kafka'nın aşkı Milenya'da anlatışı çok güzel", "createdAt": 1640280963000}' to topic='twitter-topic'
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @_georgemoller: Top programming languages and their use cases:

1. JavaScript: Web & Mobile development 
2. Python: AI, machine learning…
2021-12-23 23:06:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 980611887523139584, "id": 1474071317821497345, "text": "RT @_georgemoller: Top programming languages and their use cases:\n\n1. JavaScript: Web & Mobile development \n2. Python: AI, machine learning\u2026", "createdAt": 1640280963000}' to topic='twitter-topic'
2021-12-23 23:06:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:14 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:06:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text "Sanki bir hafta boyunca gece gündüz bir taşa çivi çakmakla görevlendirilmiş gibiyim. Ama işçi de benim milena, çivi de." 
·Franz Kafka | milena'ya mektuplar
2021-12-23 23:06:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1257431784146468867, "id": 1474071319482355715, "text": "\"Sanki bir hafta boyunca gece gündüz bir taşa çivi çakmakla görevlendirilmiş gibiyim. Ama işçi de benim milena, çivi de.\" \n·Franz Kafka | milena'ya mektuplar", "createdAt": 1640280964000}' to topic='twitter-topic'
2021-12-23 23:06:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:06:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 23:06:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 606190403, "id": 1474071332925149193, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640280967000}' to topic='twitter-topic'
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 23:06:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1064108650271309826, "id": 1474071343159259137, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640280969000}' to topic='twitter-topic'
2021-12-23 23:06:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 23:06:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1364497572509880322, "id": 1474071350633504768, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640280971000}' to topic='twitter-topic'
2021-12-23 23:06:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Kayal4Kayal: MAGENTO PHP DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pytho…
2021-12-23 23:06:19 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 824070649073188865, "id": 1474071352256700417, "text": "RT @Kayal4Kayal: MAGENTO PHP DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pytho\u2026", "createdAt": 1640280971000}' to topic='twitter-topic'
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 23:06:21 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 318650163, "id": 1474071373320495109, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640280976000}' to topic='twitter-topic'
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text #TamilSpaces 
Java space 
#Spaceshost
@Devjs7
https://t.co/aDPBmJZo9E
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1404197960120889345, "id": 1474071376629682205, "text": "#TamilSpaces \nJava space \n#Spaceshost\n@Devjs7\nhttps://t.co/aDPBmJZo9E", "createdAt": 1640280977000}' to topic='twitter-topic'
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @Dwitteraar Wat leuk! Ik was op Bali, Java (Jakarta) en West-Papua. Ben je als baby naar Nederland gekomen?
2021-12-23 23:06:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 363890186, "id": 1474071393063079941, "text": "@Dwitteraar Wat leuk! Ik was op Bali, Java (Jakarta) en West-Papua. Ben je als baby naar Nederland gekomen?", "createdAt": 1640280981000}' to topic='twitter-topic'
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @DeepBlueInfoSec: 4-Year-Old Bug in Azure App Service Exposed Hundreds of Source Code Repositories: A security flaw has been unearthed i…
2021-12-23 23:06:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1283421383934898176, "id": 1474071399073390592, "text": "RT @DeepBlueInfoSec: 4-Year-Old Bug in Azure App Service Exposed Hundreds of Source Code Repositories: A security flaw has been unearthed i\u2026", "createdAt": 1640280983000}' to topic='twitter-topic'
2021-12-23 23:06:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @DanielPCarazo Las mías: El proceso de Kafka que no terminé y la parte final e infumable de Ensayo sobre la ceguera...
2021-12-23 23:06:30 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2939453955, "id": 1474071412583370762, "text": "@DanielPCarazo Las mías: El proceso de Kafka que no terminé y la parte final e infumable de Ensayo sobre la ceguera...", "createdAt": 1640280986000}' to topic='twitter-topic'
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @painbtc Pretty much anything. Very into Go, Rust and Elixir but day to day Java, Typescript and PHP.
2021-12-23 23:06:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1385126824947109889, "id": 1474071429134094337, "text": "@painbtc Pretty much anything. Very into Go, Rust and Elixir but day to day Java, Typescript and PHP.", "createdAt": 1640280990000}' to topic='twitter-topic'
2021-12-23 23:06:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Indrajeetietlko: I just earned Java (Basic) skill certificate via @HackerRank. Get your skills certified and show the world what you ca…
2021-12-23 23:06:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1442675449373544449, "id": 1474071447932964881, "text": "RT @Indrajeetietlko: I just earned Java (Basic) skill certificate via @HackerRank. Get your skills certified and show the world what you ca\u2026", "createdAt": 1640280994000}' to topic='twitter-topic'
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @dgomezg: My talk about "Building modular monoliths that could scale to microservices (only if they need to)" at @cjug is now online. -…
2021-12-23 23:06:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 9373652, "id": 1474071460738125825, "text": "RT @dgomezg: My talk about \"Building modular monoliths that could scale to microservices (only if they need to)\" at @cjug is now online. -\u2026", "createdAt": 1640280997000}' to topic='twitter-topic'
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @asirihaklii: “Söyleyecek çok şey vardı ama söylememeye karar verdim.”

Franz Kafka
2021-12-23 23:06:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 795286204925222913, "id": 1474071479310561281, "text": "RT @asirihaklii: \u201CSöyleyecek çok şey vardı ama söylememeye karar verdim.\u201D\n\nFranz Kafka", "createdAt": 1640281002000}' to topic='twitter-topic'
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text For Java developers....Spring Boot appreciation tweet. https://t.co/Za7aaYoAro
2021-12-23 23:06:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1451297084, "id": 1474071482066096131, "text": "For Java developers....Spring Boot appreciation tweet. https://t.co/Za7aaYoAro", "createdAt": 1640281002000}' to topic='twitter-topic'
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @psikoIojiu: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 23:06:49 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3084637419, "id": 1474071491029487617, "text": "RT @psikoIojiu: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640281005000}' to topic='twitter-topic'
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @jsquotespics: “It's only because of their stupidity that they're able to be so sure of themselves.” - Franz Kafka #quotes
2021-12-23 23:06:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1474031665966030852, "id": 1474071515075211264, "text": "RT @jsquotespics: \u201CIt's only because of their stupidity that they're able to be so sure of themselves.\u201D - Franz Kafka #quotes", "createdAt": 1640281010000}' to topic='twitter-topic'
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:06:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @BostonInSouth: @JerasIkehorn Coffee and yes good with it.. love my java https://t.co/OnIqzB0ekK
2021-12-23 23:07:01 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 828030159932395520, "id": 1474071544137719809, "text": "RT @BostonInSouth: @JerasIkehorn Coffee and yes good with it.. love my java https://t.co/OnIqzB0ekK", "createdAt": 1640281017000}' to topic='twitter-topic'
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Passing through @CityWarrensburg and @UCMMULES over the holiday break? A little reminder that Java Junction on Pine/Holden has #CaffeineCrawl holiday items to purchase. https://t.co/dqvmix3i1Y
2021-12-23 23:07:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 303565808, "id": 1474071586500186129, "text": "Passing through @CityWarrensburg and @UCMMULES over the holiday break? A little reminder that Java Junction on Pine/Holden has #CaffeineCrawl holiday items to purchase. https://t.co/dqvmix3i1Y", "createdAt": 1640281027000}' to topic='twitter-topic'
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atleast 1 fully working project.
Feel free to recommend any good project tutorial video series links (YouTube, Coursera or pluralsight).
#reactjs #java #javascript
2021-12-23 23:07:20 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1470070454681411598, "id": 1474071618657800224, "text": "Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atleast 1 fully working project.\nFeel free to recommend any good project tutorial video series links (YouTube, Coursera or pluralsight).\n#reactjs #java #javascript", "createdAt": 1640281035000}' to topic='twitter-topic'
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @VisheshJha16: Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atlea…
2021-12-23 23:07:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1382032616824651777, "id": 1474071640745168902, "text": "RT @VisheshJha16: Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atlea\u2026", "createdAt": 1640281040000}' to topic='twitter-topic'
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:07:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @VisheshJha16: Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atlea…
2021-12-23 23:07:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1437728609909706753, "id": 1474071649431347200, "text": "RT @VisheshJha16: Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atlea\u2026", "createdAt": 1640281042000}' to topic='twitter-topic'
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:07:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @heyOnuoha When I started I thought JavaScript was a subset of Java 🤦‍♂️
2021-12-23 23:07:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 337902704, "id": 1474071656805154821, "text": "@heyOnuoha When I started I thought JavaScript was a subset of Java 🤦\u200D♂️", "createdAt": 1640281044000}' to topic='twitter-topic'
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text un bel exemple que les femmes sont capables de s’épanouir sur internet autre que sur onlyfan 😍
2021-12-23 23:07:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1458164775586869266, "id": 1474071667446063108, "text": "un bel exemple que les femmes sont capables de s\u2019épanouir sur internet autre que sur onlyfan 😍", "createdAt": 1640281047000}' to topic='twitter-topic'
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @VisheshJha16: Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atlea…
2021-12-23 23:07:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1423655520196435969, "id": 1474071695975718915, "text": "RT @VisheshJha16: Pre New Year Resolution- I will try my best to end this year with some knowledge of react.js and spring(java)  i.e. atlea\u2026", "createdAt": 1640281053000}' to topic='twitter-topic'
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @gabiciddeleon: Un abogado es una persona que escribe un documento de 10000 palabras y lo llama resumen. 
Franz Kafka
2021-12-23 23:07:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3337976793, "id": 1474071736836628491, "text": "RT @gabiciddeleon: Un abogado es una persona que escribe un documento de 10000 palabras y lo llama resumen. \nFranz Kafka", "createdAt": 1640281063000}' to topic='twitter-topic'
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:07:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text #RemoteJobs
💻  Argo AI : Staff Software Engineer, Map Engineering
✔️ Tech stacks: #Java  #Python  #AmazonWebServices

Apply here -> https://t.co/7ShuVQKq5z
 
#devjobs #techjobs #engineerjob #softwaredevelopment
2021-12-23 23:08:09 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1416065179603722242, "id": 1474071824333950985, "text": "#RemoteJobs\n💻  Argo AI : Staff Software Engineer, Map Engineering\n✔️ Tech stacks: #Java  #Python  #AmazonWebServices\n\nApply here -> https://t.co/7ShuVQKq5z\n \n#devjobs #techjobs #engineerjob #softwaredevelopment", "createdAt": 1640281084000}' to topic='twitter-topic'
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @ippsec: My video on LogForge is now online! This is the box I had made for UHC last week and features the Log4j vulnerability two ways…
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1442675449373544449, "id": 1474071830642237440, "text": "RT @ippsec: My video on LogForge is now online! This is the box I had made for UHC last week and features the Log4j vulnerability two ways\u2026", "createdAt": 1640281086000}' to topic='twitter-topic'
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 23:08:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1305185260779507712, "id": 1474071833741869060, "text": "Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640281086000}' to topic='twitter-topic'
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @sonictyrant: The dad joke urge to run into Starbucks and yell "the floor is java!"
2021-12-23 23:08:15 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 412777844, "id": 1474071837994733568, "text": "RT @sonictyrant: The dad joke urge to run into Starbucks and yell \"the floor is java!\"", "createdAt": 1640281087000}' to topic='twitter-topic'
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:16 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @vtremolet: Le passe vaccinal doit remplacer les tests par le vaccin. Mais il pourrait être accompagné, dans certains lieux, d'une oblig…
2021-12-23 23:08:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2289978930, "id": 1474071843120287750, "text": "RT @vtremolet: Le passe vaccinal doit remplacer les tests par le vaccin. Mais il pourrait être accompagné, dans certains lieux, d'une oblig\u2026", "createdAt": 1640281088000}' to topic='twitter-topic'
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:17 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:18 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:19 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:20 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:21 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:24 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Follow CertHippo Solution LLC for more Updates
.
.
#Certhippo #Certhipposolution #database #IT #SQL #programming #data #datascience #python #AWS #css3 #html #cloudcomputing #relationaldatabase #nonrelationaldatabase #coding #java #javascript https://t.co/6RX6fTCDhc
2021-12-23 23:08:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1461002140000739336, "id": 1474071891178508289, "text": "Follow CertHippo Solution LLC for more Updates\n.\n.\n#Certhippo #Certhipposolution #database #IT #SQL #programming #data #datascience #python #AWS #css3 #html #cloudcomputing #relationaldatabase #nonrelationaldatabase #coding #java #javascript https://t.co/6RX6fTCDhc", "createdAt": 1640281100000}' to topic='twitter-topic'
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:25 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:26 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @sciracioglu @fkadev @fatih @fatihacet @CoderBora @yakuter @EmirKarsiyakali @lemiorhan Takip ediliyorum ama iş arayışım jr. java dev . Üzdü :(
2021-12-23 23:08:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1066046358111612928, "id": 1474071902067261440, "text": "@sciracioglu @fkadev @fatih @fatihacet @CoderBora @yakuter @EmirKarsiyakali @lemiorhan Takip ediliyorum ama iş arayışım jr. java dev . Üzdü :(", "createdAt": 1640281103000}' to topic='twitter-topic'
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:27 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text “Şu yeryüzünde bana yetecek kadar sabır var mı dersin, Milena?”

Franz Kafka
2021-12-23 23:08:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 70125009, "id": 1474071903186919424, "text": "\u201CŞu yeryüzünde bana yetecek kadar sabır var mı dersin, Milena?\u201D\n\nFranz Kafka", "createdAt": 1640281103000}' to topic='twitter-topic'
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:29 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @phramattone @kahluaeluau @dottorbarbieri @Luca_Fantuzzi vabbeh siamo oltre kafka
2021-12-23 23:08:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 931840780645396481, "id": 1474071909474131972, "text": "@phramattone @kahluaeluau @dottorbarbieri @Luca_Fantuzzi vabbeh siamo oltre kafka", "createdAt": 1640281104000}' to topic='twitter-topic'
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:33 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:33 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Certhippo1: Follow CertHippo Solution LLC for more Updates
.
.
#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat…
2021-12-23 23:08:33 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 411419084, "id": 1474071921314582559, "text": "RT @Certhippo1: Follow CertHippo Solution LLC for more Updates\n.\n.\n#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat\u2026", "createdAt": 1640281107000}' to topic='twitter-topic'
2021-12-23 23:08:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:35 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Certhippo1: Follow CertHippo Solution LLC for more Updates
.
.
#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat…
2021-12-23 23:08:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1437728609909706753, "id": 1474071921939533826, "text": "RT @Certhippo1: Follow CertHippo Solution LLC for more Updates\n.\n.\n#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat\u2026", "createdAt": 1640281107000}' to topic='twitter-topic'
2021-12-23 23:08:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:37 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @SnowDow23 i would but no java
2021-12-23 23:08:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1215391415087308800, "id": 1474071948963590144, "text": "@SnowDow23 i would but no java", "createdAt": 1640281114000}' to topic='twitter-topic'
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:38 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:39 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: 10 Programming Languages to Learn in 2022 According to Experts 
#javascript #github #nodejs #cybersecurity #devops #100Day…
2021-12-23 23:08:40 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1314164146934513665, "id": 1474071952650350594, "text": "RT @WajdiKayal3: 10 Programming Languages to Learn in 2022 According to Experts \n#javascript #github #nodejs #cybersecurity #devops #100Day\u2026", "createdAt": 1640281115000}' to topic='twitter-topic'
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:40 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:41 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @IncomeTaxIndia @nsitharamanoffc @officeofPCM @FinMinIndia @PIB_India Where is Java utility of itr 6
Why we have to file itr on offline mode..
2021-12-23 23:08:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 193207832, "id": 1474071956903251982, "text": "@IncomeTaxIndia @nsitharamanoffc @officeofPCM @FinMinIndia @PIB_India Where is Java utility of itr 6\nWhy we have to file itr on offline mode..", "createdAt": 1640281116000}' to topic='twitter-topic'
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:42 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:43 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Certhippo1: Follow CertHippo Solution LLC for more Updates
.
.
#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat…
2021-12-23 23:08:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1151494493054484481, "id": 1474071969435983872, "text": "RT @Certhippo1: Follow CertHippo Solution LLC for more Updates\n.\n.\n#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat\u2026", "createdAt": 1640281119000}' to topic='twitter-topic'
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:45 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @ZPostFacto It's also monetized to hell and back with "minecoins" for everything, 'superceding' the concept of free modding and skins in the Java edition and targets children very explicitly.
Microsoft even encourage this by letting you use these 'coins' to buy VIP/P2W in servers, etc.
2021-12-23 23:08:46 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 778919388724338688, "id": 1474071973252767751, "text": "@ZPostFacto It's also monetized to hell and back with \"minecoins\" for everything, 'superceding' the concept of free modding and skins in the Java edition and targets children very explicitly.\nMicrosoft even encourage this by letting you use these 'coins' to buy VIP/P2W in servers, etc.", "createdAt": 1640281120000}' to topic='twitter-topic'
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:46 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:47 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:48 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @shonenjump: Kaiju No. 8, Ch. 53: The battle is reaching its climax! Can Kafka stop Kaiju No. 9 from escaping?! Read it FREE from the of…
2021-12-23 23:08:48 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 605680599, "id": 1474071988205404162, "text": "RT @shonenjump: Kaiju No. 8, Ch. 53: The battle is reaching its climax! Can Kafka stop Kaiju No. 9 from escaping?! Read it FREE from the of\u2026", "createdAt": 1640281123000}' to topic='twitter-topic'
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:48 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:49 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 23:08:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1448595940160544770, "id": 1474071991841869828, "text": "Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640281124000}' to topic='twitter-topic'
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:50 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:51 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:52 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @bertolazzzo das 6 as 12 java
2021-12-23 23:08:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 137197068, "id": 1474072003040718848, "text": "@bertolazzzo das 6 as 12 java", "createdAt": 1640281127000}' to topic='twitter-topic'
2021-12-23 23:08:52 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:53 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:54 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:55 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:56 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @devscansados: mas esse java viu https://t.co/t14lCdFBz9
2021-12-23 23:08:57 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1379255196438630407, "id": 1474072028965650443, "text": "RT @devscansados: mas esse java viu https://t.co/t14lCdFBz9", "createdAt": 1640281133000}' to topic='twitter-topic'
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:57 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:08:59 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:00 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:01 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:02 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:03 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Certhippo1: Follow CertHippo Solution LLC for more Updates
.
.
#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat…
2021-12-23 23:09:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1386109685741260803, "id": 1474072058548170756, "text": "RT @Certhippo1: Follow CertHippo Solution LLC for more Updates\n.\n.\n#Certhippo #Certhipposolution #database #IT #SQL #programming #data #dat\u2026", "createdAt": 1640281140000}' to topic='twitter-topic'
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:06 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @joanknecht: Er is een ernstige kwetsbaarheid aangetroffen in de Apache Log4j 2-tool, die gebruikt wordt voor het loggen van #Java-appli…
2021-12-23 23:09:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 519769216, "id": 1474072072271720449, "text": "RT @joanknecht: Er is een ernstige kwetsbaarheid aangetroffen in de Apache Log4j 2-tool, die gebruikt wordt voor het loggen van #Java-appli\u2026", "createdAt": 1640281143000}' to topic='twitter-topic'
2021-12-23 23:09:07 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:08 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:09 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ❗ランキング：16位❗(CPU)

「増設CPUボード (12C/ E5-2670v3)  N8101-947」
メーカ:NEC

価格:¥527,398✨
🔥売り切れ間近🔥(02:39)

https://t.co/Rp2z6U4AZU
2021-12-23 23:09:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1375961552122044417, "id": 1474072073018703872, "text": "❗ランキング：16位❗(CPU)\n\n「増設CPUボード (12C/ E5-2670v3)  N8101-947」\nメーカ:NEC\n\n価格:¥527,398✨\n🔥売り切れ間近🔥(02:39)\n\nhttps://t.co/Rp2z6U4AZU", "createdAt": 1640281143000}' to topic='twitter-topic'
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:10 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:11 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text #Bestseller #Development #WebDevelopment Master Microservices with Spring Boot and Spring Cloud..83% off udemy coupon code https://t.co/54w1qnQkJx
2021-12-23 23:09:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3082124964, "id": 1474072075958571016, "text": "#Bestseller #Development #WebDevelopment Master Microservices with Spring Boot and Spring Cloud..83% off udemy coupon code https://t.co/54w1qnQkJx", "createdAt": 1640281144000}' to topic='twitter-topic'
2021-12-23 23:09:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:09:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:09:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:09:12 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:09:12 [SpringApplicationShutdownHook] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Closing twitter stream
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:12 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:13 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [Twitter4J Async Dispatcher[0]] ERROR i.c.k.s.client.rest.RestService - Failed to send HTTP request to endpoint: http://localhost:8081/subjects/twitter-topic-value/versions?normalize=false
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1334)
	at sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1309)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.sendHttpRequest(RestService.java:268)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.httpRequest(RestService.java:367)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:544)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:532)
	at io.confluent.kafka.schemaregistry.client.rest.RestService.registerSchema(RestService.java:490)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.registerAndGetId(CachedSchemaRegistryClient.java:257)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:366)
	at io.confluent.kafka.schemaregistry.client.CachedSchemaRegistryClient.register(CachedSchemaRegistryClient.java:337)
	at io.confluent.kafka.serializers.AbstractKafkaAvroSerializer.serializeImpl(AbstractKafkaAvroSerializer.java:115)
	at io.confluent.kafka.serializers.KafkaAvroSerializer.serialize(KafkaAvroSerializer.java:61)
	at org.apache.kafka.common.serialization.Serializer.serialize(Serializer.java:62)
	at org.apache.kafka.clients.producer.KafkaProducer.doSend(KafkaProducer.java:926)
	at org.apache.kafka.clients.producer.KafkaProducer.send(KafkaProducer.java:886)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer.send(DefaultKafkaProducerFactory.java:864)
	at org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:580)
	at org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:386)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:31)
	at com.microservices.demo.kafka.producer.config.service.impl.TwitterKafkaProducer.send(TwitterKafkaProducer.java:16)
	at com.microservices.demo.twitter.to.kafka.service.listener.TwitterKafkaStatusListener.onStatus(TwitterKafkaStatusListener.java:30)
	at twitter4j.StatusStreamImpl.onStatus(StatusStreamImpl.java:75)
	at twitter4j.StatusStreamBase$1.run(StatusStreamBase.java:105)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-12-23 23:09:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @userjcp: KINDLY RETWEET🙏.

Hello there😃 i do programming Assignments/Projects,you can DM me and I'll be willing to help you out. I focu…
2021-12-23 23:09:14 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1403020350871400451, "id": 1474072081813880833, "text": "RT @userjcp: KINDLY RETWEET🙏.\n\nHello there😃 i do programming Assignments/Projects,you can DM me and I'll be willing to help you out. I focu\u2026", "createdAt": 1640281145000}' to topic='twitter-topic'
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:14 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:09:15 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] 3 partitions have leader brokers without a matching listener, including [twitter-topic-2, twitter-topic-1, twitter-topic-0]
2021-12-23 23:19:10 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 24004 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:19:10 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:19:13 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:19:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:19:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:19:13 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640281753564
2021-12-23 23:19:15 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:19:15 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.538 seconds (JVM running for 6.859)
2021-12-23 23:19:15 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:19:15 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:19:15 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:19:15 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:19:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 23:19:32 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:113)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkSchemaRegistry(KafkaAdminClient.java:79)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:24)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 23:19:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:19:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:19:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:19:32 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:19:32 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:20:17 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 10816 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:20:17 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:20:19 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:20:20 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:20:20 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:20:20 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640281820416
2021-12-23 23:20:22 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:20:22 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 6.251 seconds (JVM running for 7.48)
2021-12-23 23:20:22 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:20:22 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:20:22 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:20:22 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:20:37 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 23:20:37 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:113)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkSchemaRegistry(KafkaAdminClient.java:79)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:24)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 23:20:37 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:20:37 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:20:37 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:20:37 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:20:37 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:20:37 [reactor-http-nio-3] WARN  r.n.http.client.HttpClientConnect - [358477d2-2, L:0.0.0.0/0.0.0.0:51579 ! R:localhost/127.0.0.1:8081] The connection observed an error
reactor.netty.http.client.PrematureCloseException: Connection prematurely closed DURING response
2021-12-23 23:22:23 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 1844 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:22:23 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:22:25 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:22:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:22:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:22:26 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640281946112
2021-12-23 23:22:27 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:22:27 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.333 seconds (JVM running for 6.695)
2021-12-23 23:22:27 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:22:27 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:22:27 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:22:27 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:24:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:24:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:24:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:24:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:24:23 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:24:39 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 22832 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:24:39 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:24:42 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:24:42 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:24:42 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:24:42 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640282082807
2021-12-23 23:24:44 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:24:44 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 6.55 seconds (JVM running for 13.328)
2021-12-23 23:24:44 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:24:44 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:24:44 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:24:44 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:25:47 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:25:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:25:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:25:48 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:25:48 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:28:14 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 1180 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:28:14 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:28:16 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:28:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:28:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:28:17 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640282297132
2021-12-23 23:28:18 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:28:18 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 5.603 seconds (JVM running for 6.789)
2021-12-23 23:28:18 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:28:18 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:28:18 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:28:18 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:31:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:31:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:31:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:31:23 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:31:23 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:31:35 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 15180 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:31:35 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:31:39 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:31:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:31:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:31:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640282500422
2021-12-23 23:31:44 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:31:44 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 9.438 seconds (JVM running for 10.529)
2021-12-23 23:31:44 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:31:44 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:31:44 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:31:44 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:31:47 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 23:31:47 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:113)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkSchemaRegistry(KafkaAdminClient.java:79)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:24)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 23:31:47 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:31:47 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:31:47 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:31:47 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:31:47 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:33:58 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 20360 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:33:58 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:34:02 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:34:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:34:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:34:03 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640282643227
2021-12-23 23:34:06 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:34:06 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 9.445 seconds (JVM running for 12.272)
2021-12-23 23:34:06 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:34:06 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:34:06 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:34:06 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:37:53 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 23:37:54 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:113)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkSchemaRegistry(KafkaAdminClient.java:79)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:24)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 23:37:54 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:37:54 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:37:54 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:37:54 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:37:54 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:40:19 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 11228 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:40:19 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:40:24 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:40:25 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:40:25 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:40:25 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640283025666
2021-12-23 23:40:29 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:40:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 11.752 seconds (JVM running for 18.178)
2021-12-23 23:40:30 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:40:30 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:40:30 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:40:30 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:43:06 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 23:43:06 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:114)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkSchemaRegistry(KafkaAdminClient.java:79)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:24)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 23:43:06 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:43:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:43:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:43:07 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:43:07 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:44:02 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 14724 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:44:02 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:44:04 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:44:05 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:44:05 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:44:05 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640283245485
2021-12-23 23:44:07 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:44:07 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 6.188 seconds (JVM running for 7.501)
2021-12-23 23:44:07 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:44:07 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:44:07 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:44:07 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:44:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-12-23 23:44:09 [main] ERROR o.s.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Failed to execute CommandLineRunner
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:794)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.main(TwitterToKafkaServiceApplication.java:32)
Caused by: java.lang.RuntimeException: reached max number of retry for reading kafka topics
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkMaxRetry(KafkaAdminClient.java:114)
	at com.microservices.demo.kafka.admin.config.client.KafkaAdminClient.checkSchemaRegistry(KafkaAdminClient.java:79)
	at com.microservices.demo.twitter.to.kafka.service.init.impl.KafkaStreamInitializer.init(KafkaStreamInitializer.java:24)
	at com.microservices.demo.twitter.to.kafka.service.TwitterToKafkaServiceApplication.run(TwitterToKafkaServiceApplication.java:41)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	... 5 common frames omitted
2021-12-23 23:44:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:44:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:44:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:44:09 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:44:09 [main] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:47:07 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Starting TwitterToKafkaServiceApplication using Java 1.8.0_202 on DESKTOP-HD6CG2B with PID 10328 (C:\Workspaces\EventDrivenMicroservices\microservices-demo\twitter-to-kafka-service\target\classes started by DELL in C:\Workspaces\EventDrivenMicroservices\microservices-demo)
2021-12-23 23:47:07 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - No active profile set, falling back to default profiles: default
2021-12-23 23:47:09 [main] INFO  o.a.k.c.admin.AdminClientConfig - AdminClientConfig values: 
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2021-12-23 23:47:10 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:47:10 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:47:10 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640283430525
2021-12-23 23:47:12 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port 8080
2021-12-23 23:47:12 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - Started TwitterToKafkaServiceApplication in 7.44 seconds (JVM running for 9.132)
2021-12-23 23:47:12 [main] INFO  c.m.d.t.t.k.s.TwitterToKafkaServiceApplication - app started
2021-12-23 23:47:12 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - creating 1 kafka topics attempt 0 
2021-12-23 23:47:12 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Create topic result [KafkaFuture{value=null,exception=null,done=false}]
2021-12-23 23:47:12 [main] INFO  c.m.d.k.a.c.client.KafkaAdminClient - Reading Kafka Topic [twitter-topic], attempt 0
2021-12-23 23:47:13 [main] INFO  c.m.d.t.t.k.s.i.i.KafkaStreamInitializer - Topics ready for transformation
2021-12-23 23:47:13 [main] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Started filtering twitter stream for keywords [Java, Microservices, Kafka, Elasticsearch]
2021-12-23 23:47:13 [Twitter Stream consumer /  [1][initializing]] INFO  twitter4j.TwitterStreamImpl - Establishing connection.
2021-12-23 23:47:16 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Connection established.
2021-12-23 23:47:16 [Twitter Stream consumer /  [1][Establishing connection]] INFO  twitter4j.TwitterStreamImpl - Receiving status stream.
2021-12-23 23:47:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Leo nimeenda java house na soo,,,, guess what i was so near kupata kofi 😂😂😂😂💔 but Sonia came through nikakunywa coffee 😂😂😂😂💔
#Sonia 
#SpiderManNoWayHome 
#trends
2021-12-23 23:47:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1438403927121317888, "id": 1474081672870211590, "text": "Leo nimeenda java house na soo,,,, guess what i was so near kupata kofi 😂😂😂😂💔 but Sonia came through nikakunywa coffee 😂😂😂😂💔\n#Sonia \n#SpiderManNoWayHome \n#trends", "createdAt": 1640283432000}' to topic='twitter-topic'
2021-12-23 23:47:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	batch.size = 1638400
	bootstrap.servers = [localhost:19092, localhost:29092, localhost:39092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.type = snappy
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = false
	interceptor.classes = []
	internal.auto.downgrade.txn.commit = true
	key.serializer = class org.apache.kafka.common.serialization.LongSerializer
	linger.ms = 5
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 60000
	retries = 5
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class io.confluent.kafka.serializers.KafkaAvroSerializer

2021-12-23 23:47:17 [Twitter4J Async Dispatcher[0]] INFO  i.c.k.s.KafkaAvroSerializerConfig - KafkaAvroSerializerConfig values: 
	auto.register.schemas = true
	avro.reflection.allow.null = false
	avro.remove.java.properties = false
	avro.use.logical.type.converters = false
	basic.auth.credentials.source = URL
	basic.auth.user.info = [hidden]
	bearer.auth.credentials.source = STATIC_TOKEN
	bearer.auth.token = [hidden]
	context.name.strategy = class io.confluent.kafka.serializers.context.NullContextNameStrategy
	id.compatibility.strict = true
	key.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy
	latest.compatibility.strict = true
	max.schemas.per.subject = 1000
	normalize.schemas = false
	proxy.host = 
	proxy.port = -1
	schema.reflection = false
	schema.registry.basic.auth.user.info = [hidden]
	schema.registry.ssl.cipher.suites = null
	schema.registry.ssl.enabled.protocols = [TLSv1.2]
	schema.registry.ssl.endpoint.identification.algorithm = https
	schema.registry.ssl.engine.factory.class = null
	schema.registry.ssl.key.password = null
	schema.registry.ssl.keymanager.algorithm = SunX509
	schema.registry.ssl.keystore.certificate.chain = null
	schema.registry.ssl.keystore.key = null
	schema.registry.ssl.keystore.location = null
	schema.registry.ssl.keystore.password = null
	schema.registry.ssl.keystore.type = JKS
	schema.registry.ssl.protocol = TLSv1.2
	schema.registry.ssl.provider = null
	schema.registry.ssl.secure.random.implementation = null
	schema.registry.ssl.trustmanager.algorithm = PKIX
	schema.registry.ssl.truststore.certificates = null
	schema.registry.ssl.truststore.location = null
	schema.registry.ssl.truststore.password = null
	schema.registry.ssl.truststore.type = JKS
	schema.registry.url = [http://localhost:8081]
	use.latest.version = false
	use.schema.id = -1
	value.subject.name.strategy = class io.confluent.kafka.serializers.subject.TopicNameStrategy

2021-12-23 23:47:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 2.7.1
2021-12-23 23:47:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 61dbce85d0d41457
2021-12-23 23:47:17 [Twitter4J Async Dispatcher[0]] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1640283437397
2021-12-23 23:47:17 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: nAG5fxpGSCCvzZYYIB6M5A
2021-12-23 23:47:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @m0ttab java é muito pior
2021-12-23 23:47:25 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2748163312, "id": 1474081710115639297, "text": "@m0ttab java é muito pior", "createdAt": 1640283441000}' to topic='twitter-topic'
2021-12-23 23:47:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @QuisAlmyhty: Within just the last few chapters the entire mood has shifted & now we’re entering the Kaiju Era, which sounds raw asf. I…
2021-12-23 23:47:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1224188800315817984, "id": 1474081734794911746, "text": "RT @QuisAlmyhty: Within just the last few chapters the entire mood has shifted & now we\u2019re entering the Kaiju Era, which sounds raw asf. I\u2026", "createdAt": 1640283447000}' to topic='twitter-topic'
2021-12-23 23:47:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @TheWorldMC_JP: 『TheWorldMC』はJAVA版と統合版の両方で参加可能な、地球を2000分の1で再現したマップで建国や戦争などができるサーバーです！！

◆参加するには？
プロフィールのURLにアクセスし公式Discordサーバーに参加、ルールに同意…
2021-12-23 23:47:31 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1290251505002455041, "id": 1474081735973675008, "text": "RT @TheWorldMC_JP: 『TheWorldMC』はJAVA版と統合版の両方で参加可能な、地球を2000分の1で再現したマップで建国や戦争などができるサーバーです！！\n\n◆参加するには？\nプロフィールのURLにアクセスし公式Discordサーバーに参加、ルールに同意\u2026", "createdAt": 1640283447000}' to topic='twitter-topic'
2021-12-23 23:47:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text 皆参加してイスラエル国民になってね
2021-12-23 23:47:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1290251505002455041, "id": 1474081788855480321, "text": "皆参加してイスラエル国民になってね", "createdAt": 1640283460000}' to topic='twitter-topic'
2021-12-23 23:48:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Get the best in class database management software and monitor applications closely with ELK - Elasticsearch, Logstash, Kibana! Know more here: https://t.co/by2W7KAyoH
2021-12-23 23:48:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 244045479, "id": 1474081872678428672, "text": "Get the best in class database management software and monitor applications closely with ELK - Elasticsearch, Logstash, Kibana! Know more here: https://t.co/by2W7KAyoH", "createdAt": 1640283480000}' to topic='twitter-topic'
2021-12-23 23:48:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ❗ランキング:8位❗ (ナイト＆週末セール)

「ヘアードライヤー ナノケア.　 (コーラルピンク)  EH-NA0E-P」
メーカ:Panasonic

価格:¥24,800(03:18)

https://t.co/KuA6ZIocS3
2021-12-23 23:48:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1358806251077922816, "id": 1474081882526851073, "text": "❗ランキング:8位❗ (ナイト＆週末セール)\n\n「ヘアードライヤー ナノケア.　 (コーラルピンク)  EH-NA0E-P」\nメーカ:Panasonic\n\n価格:¥24,800(03:18)\n\nhttps://t.co/KuA6ZIocS3", "createdAt": 1640283482000}' to topic='twitter-topic'
2021-12-23 23:48:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ❗ランキング：9位❗(電源パーツ)

「電源ユニット Smart BX1 RGB 650W -Bronze- PS-SPR-0650NHFABJ-1」
メーカ:Thermaltake

価格:¥6,680✨
🔥売り切れ間近🔥(03:18)

https://t.co/rkLilkxNNy
2021-12-23 23:48:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1375961552122044417, "id": 1474081885794234368, "text": "❗ランキング：9位❗(電源パーツ)\n\n「電源ユニット Smart BX1 RGB 650W -Bronze- PS-SPR-0650NHFABJ-1」\nメーカ:Thermaltake\n\n価格:¥6,680✨\n🔥売り切れ間近🔥(03:18)\n\nhttps://t.co/rkLilkxNNy", "createdAt": 1640283483000}' to topic='twitter-topic'
2021-12-23 23:48:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Doxyaxone: Oh no not my DVD player as well. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #C…
2021-12-23 23:48:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1314164146934513665, "id": 1474081926042599426, "text": "RT @Doxyaxone: Oh no not my DVD player as well. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #RStats #DotNet #C\u2026", "createdAt": 1640283492000}' to topic='twitter-topic'
2021-12-23 23:48:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @QuisAlmyhty: Within just the last few chapters the entire mood has shifted & now we’re entering the Kaiju Era, which sounds raw asf. I…
2021-12-23 23:48:18 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3456042132, "id": 1474081927430737938, "text": "RT @QuisAlmyhty: Within just the last few chapters the entire mood has shifted & now we\u2019re entering the Kaiju Era, which sounds raw asf. I\u2026", "createdAt": 1640283493000}' to topic='twitter-topic'
2021-12-23 23:48:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text maram is gonna read kafka on the shore 😢
2021-12-23 23:48:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1288161088849272833, "id": 1474081946397511689, "text": "maram is gonna read kafka on the shore 😢", "createdAt": 1640283497000}' to topic='twitter-topic'
2021-12-23 23:48:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDK45VP
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:48:24 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1307355301549543435, "id": 1474081958166679555, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDK45VP\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283500000}' to topic='twitter-topic'
2021-12-23 23:48:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:48:27 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 884492546046644225, "id": 1474081968610496513, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283503000}' to topic='twitter-topic'
2021-12-23 23:48:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text #ses
#ses営業
#java
springboot 案件ありますので是非やりたい人募集中です。
2021-12-23 23:48:28 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 525418989, "id": 1474081972213678080, "text": "#ses\n#ses営業\n#java\nspringboot 案件ありますので是非やりたい人募集中です。", "createdAt": 1640283503000}' to topic='twitter-topic'
2021-12-23 23:48:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:48:29 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1374636733682229248, "id": 1474081974868451333, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283504000}' to topic='twitter-topic'
2021-12-23 23:48:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: DJANGO / PYTHON DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#P…
2021-12-23 23:48:35 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1347396338581790723, "id": 1474082001506508811, "text": "RT @WajdiKayal3: DJANGO / PYTHON DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#P\u2026", "createdAt": 1640283510000}' to topic='twitter-topic'
2021-12-23 23:48:39 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @CourseGift: [BEST] #Udemy Build a Backend REST API with Python & Django – Advanced (+8 Hours) Course 

➡️ https://t.co/A59kOgqMkM 

#Py…
2021-12-23 23:48:39 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1347291458278080513, "id": 1474082021232152583, "text": "RT @CourseGift: [BEST] #Udemy Build a Backend REST API with Python & Django \u2013 Advanced (+8 Hours) Course \n\n➡️ https://t.co/A59kOgqMkM \n\n#Py\u2026", "createdAt": 1640283515000}' to topic='twitter-topic'
2021-12-23 23:48:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: DJANGO / PYTHON DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#P…
2021-12-23 23:48:50 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1311904892076781568, "id": 1474082066115354627, "text": "RT @WajdiKayal3: DJANGO / PYTHON DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#P\u2026", "createdAt": 1640283526000}' to topic='twitter-topic'
2021-12-23 23:48:51 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: QA AUTOMATION ENGINEER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#Pyth…
2021-12-23 23:48:51 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1311904892076781568, "id": 1474082070565580802, "text": "RT @WajdiKayal3: QA AUTOMATION ENGINEER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#Pyth\u2026", "createdAt": 1640283527000}' to topic='twitter-topic'
2021-12-23 23:48:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @AkborDesigner: @Vaaniofficial @carysil_ #Job
#Lebanon
#Programming
#DigitalMarketing
#cybersecurity
#AI #DataScience #MachineLearning #…
2021-12-23 23:48:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1311904892076781568, "id": 1474082073086365701, "text": "RT @AkborDesigner: @Vaaniofficial @carysil_ #Job\n#Lebanon\n#Programming\n#DigitalMarketing\n#cybersecurity\n#AI #DataScience #MachineLearning #\u2026", "createdAt": 1640283528000}' to topic='twitter-topic'
2021-12-23 23:48:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @WajdiKayal3: DJANGO / PYTHON DEVELOPER 
#Job 
#hiring
#Programming
#DigitalMarketing
#cybersecurity #MachineLearning #100DaysOfCode 
#P…
2021-12-23 23:48:55 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1405208575455088640, "id": 1474082088089497603, "text": "RT @WajdiKayal3: DJANGO / PYTHON DEVELOPER \n#Job \n#hiring\n#Programming\n#DigitalMarketing\n#cybersecurity #MachineLearning #100DaysOfCode \n#P\u2026", "createdAt": 1640283531000}' to topic='twitter-topic'
2021-12-23 23:49:02 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @RasmiShah1: DevOps Best Practices You Should Be Following Now

https://t.co/Kv4lOIhKsC

#devops #cloud #programming #cloudcomputing #aw…
2021-12-23 23:49:02 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1296106662428905474, "id": 1474082113267900440, "text": "RT @RasmiShah1: DevOps Best Practices You Should Be Following Now\n\nhttps://t.co/Kv4lOIhKsC\n\n#devops #cloud #programming #cloudcomputing #aw\u2026", "createdAt": 1640283537000}' to topic='twitter-topic'
2021-12-23 23:49:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Want to work in #Tempe, AZ? View our latest opening: https://t.co/3MslM6s4pD #java
2021-12-23 23:49:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 925744053223800832, "id": 1474082117659156482, "text": "Want to work in #Tempe, AZ? View our latest opening: https://t.co/3MslM6s4pD #java", "createdAt": 1640283538000}' to topic='twitter-topic'
2021-12-23 23:49:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Apache Software Foundation (ASF) reveló una tercera vulnerabilidad con CVSS 7,5 en su librería de código abierto de Java Log4j la cual afecta a las versiones 2.0-alpha1 hasta la 2.16.0. Esta ya se encuentra parcheada en la 2.17.0.
Info: https://t.co/go0SUiUx0r
#ciberseguridad
2021-12-23 23:49:03 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2521873429, "id": 1474082118959607808, "text": "Apache Software Foundation (ASF) reveló una tercera vulnerabilidad con CVSS 7,5 en su librería de código abierto de Java Log4j la cual afecta a las versiones 2.0-alpha1 hasta la 2.16.0. Esta ya se encuentra parcheada en la 2.17.0.\nInfo: https://t.co/go0SUiUx0r\n#ciberseguridad", "createdAt": 1640283538000}' to topic='twitter-topic'
2021-12-23 23:49:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text “Ah Milena… Bugün yağmur göz kapaklarıma yağıyor.”

Franz Kafka
2021-12-23 23:49:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2997852675, "id": 1474082132985270274, "text": "\u201CAh Milena\u2026 Bugün yağmur göz kapaklarıma yağıyor.\u201D\n\nFranz Kafka", "createdAt": 1640283542000}' to topic='twitter-topic'
2021-12-23 23:49:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobsAtInsight: Want to work in #Tempe, AZ? View our latest opening: https://t.co/3MslM6s4pD #java
2021-12-23 23:49:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1423655520196435969, "id": 1474082147921281028, "text": "RT @JobsAtInsight: Want to work in #Tempe, AZ? View our latest opening: https://t.co/3MslM6s4pD #java", "createdAt": 1640283545000}' to topic='twitter-topic'
2021-12-23 23:49:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @BelloneDavide For whatever reason the sealed method aspect of this escaped my recollection until I got a question on it from a student this year. As I teach I try to also highlight similarities and differences with Java and Java loves the sealed keyword.
2021-12-23 23:49:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 38983608, "id": 1474082151192662021, "text": "@BelloneDavide For whatever reason the sealed method aspect of this escaped my recollection until I got a question on it from a student this year. As I teach I try to also highlight similarities and differences with Java and Java loves the sealed keyword.", "createdAt": 1640283546000}' to topic='twitter-topic'
2021-12-23 23:49:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: “Biraz daha uyusam bütün bu olanlardan kurtulabilir miyim?”

Franz Kafka
2021-12-23 23:49:13 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1464686443578732545, "id": 1474082163255660549, "text": "RT @Sozyuku: \u201CBiraz daha uyusam bütün bu olanlardan kurtulabilir miyim?\u201D\n\nFranz Kafka", "createdAt": 1640283549000}' to topic='twitter-topic'
2021-12-23 23:49:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sozyuku: Franz Kafka’nın “Delirmenin eşiğindeyim.” dediği yerdeyim..
2021-12-23 23:49:16 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1257805879782539269, "id": 1474082172650860549, "text": "RT @Sozyuku: Franz Kafka\u2019nın \u201CDelirmenin eşiğindeyim.\u201D dediği yerdeyim..", "createdAt": 1640283551000}' to topic='twitter-topic'
2021-12-23 23:49:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @WickedSquire635 Además en Java hay muchas mecánicas que son basura y empeoran la experiencia,como los bugs de la Redstone las putas colisiones con mobs como las odio xd etc
2021-12-23 23:49:22 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1403382004213813250, "id": 1474082198777217036, "text": "@WickedSquire635 Además en Java hay muchas mecánicas que son basura y empeoran la experiencia,como los bugs de la Redstone las putas colisiones con mobs como las odio xd etc", "createdAt": 1640283557000}' to topic='twitter-topic'
2021-12-23 23:49:33 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @a_n_g_e_l_e_t: 🔴Print in #Python
Print("Hello World")

⚫Print in #Java
import java.  io.*;
class GFG{
public static void main(String[]…
2021-12-23 23:49:33 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1383624504534994954, "id": 1474082247338864642, "text": "RT @a_n_g_e_l_e_t: 🔴Print in #Python\nPrint(\"Hello World\")\n\n⚫Print in #Java\nimport java.  io.*;\nclass GFG{\npublic static void main(String[]\u2026", "createdAt": 1640283569000}' to topic='twitter-topic'
2021-12-23 23:49:33 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto 

v/@wef 

#DataScience #Analytics…
2021-12-23 23:49:33 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1283965825590984704, "id": 1474082248286744591, "text": "RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto \n\nv/@wef \n\n#DataScience #Analytics\u2026", "createdAt": 1640283569000}' to topic='twitter-topic'
2021-12-23 23:49:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text JavaScript just bought me a Just Cavalli dress for New Years eve, that is a scandalous type and Java would never do that
2021-12-23 23:49:34 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 564603612, "id": 1474082251587657743, "text": "JavaScript just bought me a Just Cavalli dress for New Years eve, that is a scandalous type and Java would never do that", "createdAt": 1640283570000}' to topic='twitter-topic'
2021-12-23 23:49:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ~Benimle onun arasında kaldıysan onu seç Milena. 

~Neden?

~Çünkü beni gerçekten sevseydin, Bir seçenek olarak görmezdin...🕊

-Kafka-
2021-12-23 23:49:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1233700284418973696, "id": 1474082255555469322, "text": "~Benimle onun arasında kaldıysan onu seç Milena. \n\n~Neden?\n\n~Çünkü beni gerçekten sevseydin, Bir seçenek olarak görmezdin...🕊\n\n-Kafka-", "createdAt": 1640283571000}' to topic='twitter-topic'
2021-12-23 23:49:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @harshhhyaaar: Day 80 of #100daysofcodechallenge 

Concept of B tree and how it's traversed!!

#100daysofCode #Python #pythonprogramming…
2021-12-23 23:49:36 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1347396338581790723, "id": 1474082260169203721, "text": "RT @harshhhyaaar: Day 80 of #100daysofcodechallenge \n\nConcept of B tree and how it's traversed!!\n\n#100daysofCode #Python #pythonprogramming\u2026", "createdAt": 1640283572000}' to topic='twitter-topic'
2021-12-23 23:49:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @harshhhyaaar: Day 80 of #100daysofcodechallenge 

Concept of B tree and how it's traversed!!

#100daysofCode #Python #pythonprogramming…
2021-12-23 23:49:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1364497572509880322, "id": 1474082265718272000, "text": "RT @harshhhyaaar: Day 80 of #100daysofcodechallenge \n\nConcept of B tree and how it's traversed!!\n\n#100daysofCode #Python #pythonprogramming\u2026", "createdAt": 1640283573000}' to topic='twitter-topic'
2021-12-23 23:49:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto 

v/@wef 

#DataScience #Analytics…
2021-12-23 23:49:38 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 3064146644, "id": 1474082267295322113, "text": "RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto \n\nv/@wef \n\n#DataScience #Analytics\u2026", "createdAt": 1640283574000}' to topic='twitter-topic'
2021-12-23 23:49:39 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @a_n_g_e_l_e_t: 🔴Print in #Python
Print("Hello World")

⚫Print in #Java
import java.  io.*;
class GFG{
public static void main(String[]…
2021-12-23 23:49:39 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1337430590241562626, "id": 1474082269455437832, "text": "RT @a_n_g_e_l_e_t: 🔴Print in #Python\nPrint(\"Hello World\")\n\n⚫Print in #Java\nimport java.  io.*;\nclass GFG{\npublic static void main(String[]\u2026", "createdAt": 1640283574000}' to topic='twitter-topic'
2021-12-23 23:49:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text A blast from my past. A binaural beat generator, among other things. 

Java 8 only. Enjoy, if you dare.

https://t.co/6mdLxLh6i4
2021-12-23 23:49:42 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1022959828732325888, "id": 1474082282256273410, "text": "A blast from my past. A binaural beat generator, among other things. \n\nJava 8 only. Enjoy, if you dare.\n\nhttps://t.co/6mdLxLh6i4", "createdAt": 1640283577000}' to topic='twitter-topic'
2021-12-23 23:49:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @harshhhyaaar: Day 80 of #100daysofcodechallenge 

Concept of B tree and how it's traversed!!

#100daysofCode #Python #pythonprogramming…
2021-12-23 23:49:44 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1127829883013361665, "id": 1474082292029079556, "text": "RT @harshhhyaaar: Day 80 of #100daysofcodechallenge \n\nConcept of B tree and how it's traversed!!\n\n#100daysofCode #Python #pythonprogramming\u2026", "createdAt": 1640283580000}' to topic='twitter-topic'
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @RasmiShah1: DevOps Best Practices You Should Be Following Now

https://t.co/Kv4lOIhKsC

#devops #cloud #programming #cloudcomputing #aw…
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1204128767251230720, "id": 1474082294432509964, "text": "RT @RasmiShah1: DevOps Best Practices You Should Be Following Now\n\nhttps://t.co/Kv4lOIhKsC\n\n#devops #cloud #programming #cloudcomputing #aw\u2026", "createdAt": 1640283580000}' to topic='twitter-topic'
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto 

v/@wef 

#DataScience #Analytics…
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1204128767251230720, "id": 1474082294377897993, "text": "RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto \n\nv/@wef \n\n#DataScience #Analytics\u2026", "createdAt": 1640283580000}' to topic='twitter-topic'
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto 

v/@wef 

#DataScience #Analytics…
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1204128767251230720, "id": 1474082294440906755, "text": "RT @Khulood_Almani: #AI➡️Can #ArtificialIntelligence ever be #ethical or moral? https://t.co/GT6KBCaSto \n\nv/@wef \n\n#DataScience #Analytics\u2026", "createdAt": 1640283580000}' to topic='twitter-topic'
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @harshhhyaaar: Day 80 of #100daysofcodechallenge 

Concept of B tree and how it's traversed!!

#100daysofCode #Python #pythonprogramming…
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1204128767251230720, "id": 1474082294411452417, "text": "RT @harshhhyaaar: Day 80 of #100daysofcodechallenge \n\nConcept of B tree and how it's traversed!!\n\n#100daysofCode #Python #pythonprogramming\u2026", "createdAt": 1640283580000}' to topic='twitter-topic'
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @harshhhyaaar: Day 80 of #100daysofcodechallenge 

Concept of B tree and how it's traversed!!

#100daysofCode #Python #pythonprogramming…
2021-12-23 23:49:45 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1204128767251230720, "id": 1474082295237599233, "text": "RT @harshhhyaaar: Day 80 of #100daysofcodechallenge \n\nConcept of B tree and how it's traversed!!\n\n#100daysofCode #Python #pythonprogramming\u2026", "createdAt": 1640283580000}' to topic='twitter-topic'
2021-12-23 23:49:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text #SAP is hiring a #Java Full Stack #Developer - BTP CF in #BangaloreIN560066, apply now! #job https://t.co/uq0j9Gl27n #JobsAtSAP https://t.co/UU0PJpEJYJ
2021-12-23 23:49:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1292132845, "id": 1474082300556193804, "text": "#SAP is hiring a #Java Full Stack #Developer - BTP CF in #BangaloreIN560066, apply now! #job https://t.co/uq0j9Gl27n #JobsAtSAP https://t.co/UU0PJpEJYJ", "createdAt": 1640283582000}' to topic='twitter-topic'
2021-12-23 23:49:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @noblechairs: It's really been hell of a #giveaway month! 🔥

To celebrate the last week of this years #XMAS giveaways,
we'll be giving a…
2021-12-23 23:49:47 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1172224920748810240, "id": 1474082303164964868, "text": "RT @noblechairs: It's really been hell of a #giveaway month! 🔥\n\nTo celebrate the last week of this years #XMAS giveaways,\nwe'll be giving a\u2026", "createdAt": 1640283582000}' to topic='twitter-topic'
2021-12-23 23:49:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @psikoIojiu: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 23:49:52 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1420846799233982471, "id": 1474082323532496897, "text": "RT @psikoIojiu: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640283587000}' to topic='twitter-topic'
2021-12-23 23:49:58 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @zdanyildiz: Arkadaşlar İstanbul Kartal tarafında bir sigorta firmasında, web sitesi geliştirmesine destek verecek, ihtiyaca göre crm ve…
2021-12-23 23:49:58 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 4018476525, "id": 1474082352632631303, "text": "RT @zdanyildiz: Arkadaşlar İstanbul Kartal tarafında bir sigorta firmasında, web sitesi geliştirmesine destek verecek, ihtiyaca göre crm ve\u2026", "createdAt": 1640283594000}' to topic='twitter-topic'
2021-12-23 23:50:02 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Apache Software Foundation (#ASF) reveló una tercera #vulnerabilidad con #CVSS 7,5 en su librería de código abierto de #Java #Log4j la cual afecta a las versiones 2.0-alpha1 hasta la 2.16.0. Esta ya se encuentra parcheada en la 2.17.0
Info https://t.co/go0SUiUx0r
#ciberseguridad
2021-12-23 23:50:02 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 2521873429, "id": 1474082367442763783, "text": "Apache Software Foundation (#ASF) reveló una tercera #vulnerabilidad con #CVSS 7,5 en su librería de código abierto de #Java #Log4j la cual afecta a las versiones 2.0-alpha1 hasta la 2.16.0. Esta ya se encuentra parcheada en la 2.17.0\nInfo https://t.co/go0SUiUx0r\n#ciberseguridad", "createdAt": 1640283598000}' to topic='twitter-topic'
2021-12-23 23:50:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCommunity #Mobile #gamers #indiegames #gamedev #indiedev #indiegamedev #gamedevelopment #gamedesign #indiegame #mobilegaming #videogaming #gamer #gaming #AI #IoT https://t.co/Pwxu4mac2J
2021-12-23 23:50:04 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1332714745871421443, "id": 1474082376074596358, "text": "NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCommunity #Mobile #gamers #indiegames #gamedev #indiedev #indiegamedev #gamedevelopment #gamedesign #indiegame #mobilegaming #videogaming #gamer #gaming #AI #IoT https://t.co/Pwxu4mac2J", "createdAt": 1640283600000}' to topic='twitter-topic'
2021-12-23 23:50:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text Java Software Engineer - Senior  Associate - Flexible Working at JPMorgan Chase Bank, N.A (Bournemouth, UK) https://t.co/YNlq8X5cls #java
2021-12-23 23:50:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 190626981, "id": 1474082382009491466, "text": "Java Software Engineer - Senior  Associate - Flexible Working at JPMorgan Chase Bank, N.A (Bournemouth, UK) https://t.co/YNlq8X5cls #java", "createdAt": 1640283601000}' to topic='twitter-topic'
2021-12-23 23:50:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:50:05 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1348745567191621633, "id": 1474082382915547138, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283601000}' to topic='twitter-topic'
2021-12-23 23:50:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:50:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1386109685741260803, "id": 1474082384668774406, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283602000}' to topic='twitter-topic'
2021-12-23 23:50:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Doxyaxone: It's a rite of passage. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #Cython #RStats #DotNet #C #…
2021-12-23 23:50:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1307355301549543435, "id": 1474082386120003584, "text": "RT @Doxyaxone: It's a rite of passage. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #Cython #RStats #DotNet #C #\u2026", "createdAt": 1640283602000}' to topic='twitter-topic'
2021-12-23 23:50:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text ランキング:15位 (スポーツ)

【期間限定セール】公式 エクスプロージョン 100% ホエイプロテイン 3kg  ミルクチョコレート味 ......(03:20)

https://t.co/izGHF56FUm
2021-12-23 23:50:06 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1367656120739762185, "id": 1474082386128547841, "text": "ランキング:15位 (スポーツ)\n\n【期間限定セール】公式 エクスプロージョン 100% ホエイプロテイン 3kg  ミルクチョコレート味 ......(03:20)\n\nhttps://t.co/izGHF56FUm", "createdAt": 1640283602000}' to topic='twitter-topic'
2021-12-23 23:50:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @psikoIojiu: “Kirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.”

Franz Kafka
2021-12-23 23:50:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1446406951378771974, "id": 1474082389873905674, "text": "RT @psikoIojiu: \u201CKirli bir camdan bakıp herkesi ve her şeyi kirli sanıyorsunuz.\u201D\n\nFranz Kafka", "createdAt": 1640283603000}' to topic='twitter-topic'
2021-12-23 23:50:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text @SeemaSaharan5 Completing Java, Kotlin and flutter
2021-12-23 23:50:07 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1458657393810673668, "id": 1474082390804860938, "text": "@SeemaSaharan5 Completing Java, Kotlin and flutter", "createdAt": 1640283603000}' to topic='twitter-topic'
2021-12-23 23:50:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @zdanyildiz: Arkadaşlar İstanbul Kartal tarafında bir sigorta firmasında, web sitesi geliştirmesine destek verecek, ihtiyaca göre crm ve…
2021-12-23 23:50:08 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 965902046565105665, "id": 1474082391094398981, "text": "RT @zdanyildiz: Arkadaşlar İstanbul Kartal tarafında bir sigorta firmasında, web sitesi geliştirmesine destek verecek, ihtiyaca göre crm ve\u2026", "createdAt": 1640283603000}' to topic='twitter-topic'
2021-12-23 23:50:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:50:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1371562175639207938, "id": 1474082402356056074, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283606000}' to topic='twitter-topic'
2021-12-23 23:50:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @StackDevJobs: Java Software Engineer - Senior  Associate - Flexible Working at JPMorgan Chase Bank, N.A (Bournemouth, UK) https://t.co/…
2021-12-23 23:50:10 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1423655520196435969, "id": 1474082402880339971, "text": "RT @StackDevJobs: Java Software Engineer - Senior  Associate - Flexible Working at JPMorgan Chase Bank, N.A (Bournemouth, UK) https://t.co/\u2026", "createdAt": 1640283606000}' to topic='twitter-topic'
2021-12-23 23:50:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:50:11 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 411419084, "id": 1474082405723951105, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283607000}' to topic='twitter-topic'
2021-12-23 23:50:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Doxyaxone: It's a rite of passage. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #Cython #RStats #DotNet #C #…
2021-12-23 23:50:12 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1337430590241562626, "id": 1474082408479739906, "text": "RT @Doxyaxone: It's a rite of passage. #Python #BigData #Analytics #AI #DataScience #IoT #IIoT #Azure #PyTorch #Cython #RStats #DotNet #C #\u2026", "createdAt": 1640283607000}' to topic='twitter-topic'
2021-12-23 23:50:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sheraj99: Gradient Descent Explained. #BigData #Analytics #DataScience #AI #MachineLearning #IoT #IIoT #PyTorch #Python #RStats #Tensor…
2021-12-23 23:50:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1280935835789975553, "id": 1474082431850455054, "text": "RT @Sheraj99: Gradient Descent Explained. #BigData #Analytics #DataScience #AI #MachineLearning #IoT #IIoT #PyTorch #Python #RStats #Tensor\u2026", "createdAt": 1640283613000}' to topic='twitter-topic'
2021-12-23 23:50:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @JobPreference: NEED a JOB?
Sign up now https://t.co/rMErDJMv4h
FREE. NO MIDDLEMEN
#Job #Java #Programming #Coding #100DaysofCode #DEVCo…
2021-12-23 23:50:17 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1446076069803708431, "id": 1474082433007947789, "text": "RT @JobPreference: NEED a JOB?\nSign up now https://t.co/rMErDJMv4h\nFREE. NO MIDDLEMEN\n#Job #Java #Programming #Coding #100DaysofCode #DEVCo\u2026", "createdAt": 1640283613000}' to topic='twitter-topic'
2021-12-23 23:50:23 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.t.t.k.s.l.TwitterKafkaStatusListener - twitter status with text RT @Sheraj99: Gradient Descent Explained. #BigData #Analytics #DataScience #AI #MachineLearning #IoT #IIoT #PyTorch #Python #RStats #Tensor…
2021-12-23 23:50:23 [Twitter4J Async Dispatcher[0]] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Sending message='{"userId": 1337430590241562626, "id": 1474082454512316418, "text": "RT @Sheraj99: Gradient Descent Explained. #BigData #Analytics #DataScience #AI #MachineLearning #IoT #IIoT #PyTorch #Python #RStats #Tensor\u2026", "createdAt": 1640283618000}' to topic='twitter-topic'
2021-12-23 23:50:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.admin.client for adminclient-1 unregistered
2021-12-23 23:50:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:50:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:50:28 [kafka-admin-client-thread | adminclient-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:50:28 [SpringApplicationShutdownHook] INFO  c.m.d.t.t.k.s.r.i.TwitterKafkaStreamRunner - Closing twitter stream
2021-12-23 23:50:30 [SpringApplicationShutdownHook] INFO  c.m.d.k.p.c.s.i.TwitterKafkaProducer - Closing kafka producer!
2021-12-23 23:50:30 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2021-12-23 23:50:30 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2021-12-23 23:50:30 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2021-12-23 23:50:30 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2021-12-23 23:50:30 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
